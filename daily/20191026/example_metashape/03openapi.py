r"""
generated by json2python-models v0.1.2 at Sat Oct 26 17:27:10 2019
command: $HOME/.cache/pypoetry/virtualenvs/foo-py3.7/bin/json2models -m OpenAPI ../data/swagger.json
"""
from json_to_models.dynamic_typing import FloatString
from typing import Any, List, Optional, Union


class OpenAPI:
    class Answer_Question:
        type: str
        items: "OpenAPI.Item_Schema"
        read_only: bool

    class IsPrivate_Item_Owner:
        title: str
        type: str

    class Position:
        title: str
        type: str
        maximum: int
        minimum: int

    class StatsRestriction:
        title: str
        type: str
        enum: List[str]

    class Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username:
        title: str
        type: str
        min_length: Optional[int]
        read_only: Optional[bool]
        max_length: Optional[int]
        format: Optional[str]

    class Answer_Param_Question_Result:
        type: str
        items: Union[
            "OpenAPI.IsPrivate_Item_Owner",
            "OpenAPI.Item_Schema",
            "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username",
        ]

    class Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify:
        class Property:
            username: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            password: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"

        class Property_7J:
            refresh: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"

        class Property_7M:
            token: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"

        class Property_7P:
            id: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            url: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            hash: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            title: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            params: "OpenAPI.Answer_Param_Question_Result"
            stats_restriction: "OpenAPI.StatsRestriction"
            owner: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"

        class Property_10S:
            class Next_Previou:
                type: str
                format: str
                xnullable: bool

            count: "OpenAPI.Basic_Count"
            next: "Next_Previou"
            previous: "Next_Previou"
            results: "OpenAPI.Answer_Param_Question_Result"

        class Property_10Z:
            id: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            position: "OpenAPI.Position"
            params_value: "OpenAPI.Answer_Param_Question_Result"

        class Property_11C:
            id: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            position: "OpenAPI.Position"
            text: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            answers: Union[
                "OpenAPI.Answer_Question", "OpenAPI.Answer_Param_Question_Result"
            ]

        class Property_11D:
            id: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            hash: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            title: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            description: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            is_private: "OpenAPI.IsPrivate_Item_Owner"
            params: "OpenAPI.Answer_Param_Question_Result"
            params_defaults: "OpenAPI.Answer_Param_Question_Result"
            stats_restriction: "OpenAPI.StatsRestriction"
            stats_restriction_display: "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username"
            owner: Union[
                "OpenAPI.IsPrivate_Item_Owner",
                "OpenAPI.Description_Hash_Id_Item_Owner_Password_Refresh_StatsRestrictionDisplay_Text_Title_Token_Url_Username",
            ]
            questions: Union[
                "OpenAPI.Answer_Question", "OpenAPI.Answer_Param_Question_Result"
            ]

        required: List[str]
        type: str
        properties: Union[
            "Property_10S",
            "Property_11C",
            "Property_11D",
            "Property_7J",
            "Property_7P",
            "Property_7M",
            "Property",
            "Property_10Z",
        ]

    class two_00_204:
        description: str

    class two_00_201:
        description: str
        schema: Union[
            "OpenAPI.Item_Schema",
            "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify",
        ]

    class Item_Schema:
        ref: str

    class Delete_Get_Patch_Post_Put:
        class Parameter:
            name: str
            in_: str
            required: bool
            schema: "OpenAPI.Item_Schema"

        class Response:
            two_01: "OpenAPI.two_00_201"

        class Response_10O:
            two_00: Union["OpenAPI.two_00_201", "OpenAPI.two_00_204"]

        class Response_10W:
            two_04: "OpenAPI.two_00_204"

        operation_id: str
        description: str
        parameters: List[Union["Parameter", "OpenAPI.ApiKey_Parameter"]]
        responses: Union["Response_10O", "Response", "Response_10W"]
        tags: List[str]

    class ApiKey_Parameter:
        name: str
        in_: str
        type: str
        description: Optional[str]
        required: Optional[bool]

    class Basic_Count:
        type: str

    class Info:
        title: str
        description: str
        version: str

    class Path:
        class authtokenobtain_authtokenrefresh_authtokenverify:
            post: "OpenAPI.Delete_Get_Patch_Post_Put"
            parameters: List[Any]

        class debug500_debugecho_debuginfo:
            get: "OpenAPI.Delete_Get_Patch_Post_Put"
            parameters: List[Any]

        class tests:
            get: "OpenAPI.Delete_Get_Patch_Post_Put"
            post: "OpenAPI.Delete_Get_Patch_Post_Put"
            parameters: List["OpenAPI.ApiKey_Parameter"]

        class testshash_teststestHashquestionsid_teststestHashquestionsquestionPkanswersid:
            get: "OpenAPI.Delete_Get_Patch_Post_Put"
            put: "OpenAPI.Delete_Get_Patch_Post_Put"
            patch: "OpenAPI.Delete_Get_Patch_Post_Put"
            delete: "OpenAPI.Delete_Get_Patch_Post_Put"
            parameters: List["OpenAPI.ApiKey_Parameter"]

        authtokenobtain: "authtokenobtain_authtokenrefresh_authtokenverify"
        authtokenrefresh: "authtokenobtain_authtokenrefresh_authtokenverify"
        authtokenverify: "authtokenobtain_authtokenrefresh_authtokenverify"
        debug500: "debug500_debugecho_debuginfo"
        debugecho: "debug500_debugecho_debuginfo"
        debuginfo: "debug500_debugecho_debuginfo"
        tests: "tests"
        testshash: "testshash_teststestHashquestionsid_teststestHashquestionsquestionPkanswersid"
        teststest_hashquestions: "tests"
        teststest_hashquestionsid: "testshash_teststestHashquestionsid_teststestHashquestionsquestionPkanswersid"
        teststest_hashquestionsquestion_pkanswers: "tests"
        teststest_hashquestionsquestion_pkanswersid: "testshash_teststestHashquestionsid_teststestHashquestionsquestionPkanswersid"

    class Definition:
        token_obtain_pair: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        token_refresh: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        token_verify: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        test_read_only_short: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        answer: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        question: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        test: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        answer_read_only: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        question_read_only: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"
        test_read_only: "OpenAPI.Answer_Question_Schema_Test_TokenObtainPair_TokenRefresh_TokenVerify"

    class Security:
        api_key: Optional[Union["OpenAPI.ApiKey_Parameter", List[Any]]]
        basic: Optional[Union["OpenAPI.Basic_Count", List[Any]]]

    swagger: FloatString
    info: "Info"
    host: str
    schemes: List[str]
    base_path: str
    consumes: List[str]
    produces: List[str]
    security_definitions: "Security"
    security: List["Security"]
    paths: "Path"
    definitions: "Definition"
