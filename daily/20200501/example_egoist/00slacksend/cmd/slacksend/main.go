package main
import (
	"flag"
	"fmt"
	"os"
	"log"
	"context"
	"m/config"
	"m/api"
)

// this package is generated by egoist.generate.clikit

// Option ...
type Option struct {
	Config string // for `-config`
	Args []string // cmd.Args
}


func main()  {
	opt := &Option{}
	cmd := flag.NewFlagSet("slacksend", flag.ContinueOnError)
	cmd.Usage = func(){
		fmt.Fprintln(cmd.Output(), `slacksend - send message to slack channel`)
		fmt.Fprintln(cmd.Output(), "")
		fmt.Fprintln(cmd.Output(), "Usage:")
		cmd.PrintDefaults()
	}
	cmd.StringVar(&opt.Config, "config", "", "-")

	if err := cmd.Parse(os.Args[1:]); err != nil {
		if err != flag.ErrHelp {
			cmd.Usage()
		}
		os.Exit(1)
	}
	opt.Args = cmd.Args()
	if err := run(opt); err != nil {
		log.Fatalf("!!%+v", err)
	}
}

func run(opt *Option) error {
	ctx := context.Background()
	v0, err := config.LoadConfig(opt.Config)
	if err != nil  {
		return err
	}
	v1, err := api.NewClient(v0)
	if err != nil  {
		return err
	}
	v2 := api.NewAPI(v1)
	for _, text := range opt.Args  {
		if err := v2.Send(ctx, text, "random"); err != nil  {
			return err
		}
	}
	return nil
}