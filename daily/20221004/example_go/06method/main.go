package main

import (
	"fmt"
	"reflect"
	"runtime"
	"strings"
	"unsafe"
)

type S struct{}

//go:noinline
func (s *S) Hello() {
	println("Hello")
}

// main.(*S).Hello はファイルの情報が取れる
// main.(*S).Hello-fm は<autogenerated>になる
func main() {
	ob := &S{}

	fmt.Printf("ob.Hello() -> %v\n", ob.Hello)

	pc := reflect.ValueOf(ob.Hello).Pointer()
	m := runtime_findmoduledatap(pc)

	for _, functab := range m.ftab {
		//	fmt.Printf("functab: %x, %x\n", functab.entryoff, functab.funcoff)
		funcoff := functab.funcoff
		rfunc := (*runtime.Func)(unsafe.Pointer(&m.pclntable[funcoff]))

		if strings.Contains(rfunc.Name(), "main.") {
			filename, lineno := rfunc.FileLine(rfunc.Entry())
			fmt.Printf("* %s\t%v:%v\n", rfunc.Name(), filename, lineno)
		}
	}
}

// Output:
// ob.Hello() -> 0x480500
// * runtime.main.func1	/usr/lib/go-1.18/src/runtime/proc.go:170
// * runtime.main.func2	/usr/lib/go-1.18/src/runtime/proc.go:203
// * main.(*S).Hello	/home/podhmo/ghq/github.com/podhmo/reflect-shape/metadata/_examples/06method/main.go:14
// * main.main	/home/podhmo/ghq/github.com/podhmo/reflect-shape/metadata/_examples/06method/main.go:164
// * main.(*S).Hello-fm	<autogenerated>:1
