import numpy as np

# 3. Create a null vector of size 10 (★☆☆)
Z = np.zeros(10)
Z  # => array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])

# 4.  How to find the memory size of any array (★☆☆)
Z = np.zeros((10, 10))
f"{Z.size * Z.itemsize} bytes"  # => '800 bytes'

# 6.  Create a null vector of size 10 but the fifth value which is 1 (★☆☆)

Z = np.zeros(10)
Z[4] = 1
Z  # => array([0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])

# 7.  Create a vector with values ranging from 10 to 49 (★☆☆)
Z = np.arange(10, 50)
Z  # => array([0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])

# 8.  Reverse a vector (first element becomes last) (★☆☆)
Z = np.arange(50)
Z = Z[::-1]
Z  # => array([0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])
# reverseとperformanceどちらが良いんだろう？(listになってしまうものが何かというのが...)

# 9.  Create a 3x3 matrix with values ranging from 0 to 8 (★☆☆)
Z = np.arange(9).reshape(3, 3)
Z  # => array([0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])

# 10. Find indices of non-zero elements from \[1,2,0,0,4,0\] (★☆☆)
nz = np.nonzero([1, 2, 0, 0, 4, 0])
nz  # => (array([0, 1, 4]),)

# 11. Create a 3x3 identity matrix (★☆☆)
Z = np.eye(3)
Z  # => array([0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])

# 12. Create a 3x3x3 array with random values (★☆☆)
Z = np.random.random((3, 3, 3))
Z  # => array([0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])

# 13. Create a 10x10 array with random values and find the minimum and maximum values (★☆☆)

Z = np.random.random((10, 10))
Z.min(), Z.max()  # => (0.026326329304403706, 0.9739045262425094)

# 14. Create a random vector of size 30 and find the mean value (★☆☆)

Z = np.random.random(30)
m = Z.mean()
m  # => 0.5327196622952681

# 15. Create a 2d array with 1 on the border and 0 inside (★☆☆)
Z = np.ones((10, 10))
Z[1:-1, 1:-1] = 0
Z  # => array([0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])

# 16. How to add a border (filled with 0's) around an existing array? (★☆☆)

Z = np.ones((5, 5))
Z = np.pad(Z, pad_width=1, mode="constant", constant_values=0)

# 17. What is the result of the following expression? (★☆☆)

0 * np.nan  # => nan
np.nan == np.nan  # => False
np.inf > np.nan  # => False
np.nan - np.nan  # => nan
np.nan in set([np.nan])  # => True
0.3 == 3 * 0.1  # => False

# 18. Create a 5x5 matrix with values 1,2,3,4 just below the diagonal (★☆☆)

Z = np.diag(1 + np.arange(4), k=-1)
Z  # => array([0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])



# -- stdout --------------------
# >> ZZ󰀀ZZ76:array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
# >>        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
# >>        44, 45, 46, 47, 48, 49])ZZ󰀀ZZ
# >> ZZ󰀀ZZ57:array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
# >>        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
# >>        44, 45, 46, 47, 48, 49])ZZ󰀀ZZ
# >> ZZ󰀀ZZ41:array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
# >>        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
# >>        44, 45, 46, 47, 48, 49])ZZ󰀀ZZ
# >> ZZ󰀀ZZ37:array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
# >>        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
# >>        44, 45, 46, 47, 48, 49])ZZ󰀀ZZ
# >> ZZ󰀀ZZ29:array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
# >>        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
# >>        44, 45, 46, 47, 48, 49])ZZ󰀀ZZ
# >> ZZ󰀀ZZ24:array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
# >>        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
# >>        44, 45, 46, 47, 48, 49])ZZ󰀀ZZ
# >> ZZ󰀀ZZ19:array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
# >>        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
# >>        44, 45, 46, 47, 48, 49])ZZ󰀀ZZ
# >> ZZ󰀀ZZ76:array([49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
# >>        32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
# >>        15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0])ZZ󰀀ZZ
# >> ZZ󰀀ZZ57:array([49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
# >>        32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
# >>        15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0])ZZ󰀀ZZ
# >> ZZ󰀀ZZ41:array([49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
# >>        32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
# >>        15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0])ZZ󰀀ZZ
# >> ZZ󰀀ZZ37:array([49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
# >>        32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
# >>        15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0])ZZ󰀀ZZ
# >> ZZ󰀀ZZ29:array([49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
# >>        32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
# >>        15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0])ZZ󰀀ZZ
# >> ZZ󰀀ZZ24:array([49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
# >>        32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
# >>        15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0])ZZ󰀀ZZ
# >> ZZ󰀀ZZ76:array([[0, 1, 2],
# >>        [3, 4, 5],
# >>        [6, 7, 8]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ57:array([[0, 1, 2],
# >>        [3, 4, 5],
# >>        [6, 7, 8]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ41:array([[0, 1, 2],
# >>        [3, 4, 5],
# >>        [6, 7, 8]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ37:array([[0, 1, 2],
# >>        [3, 4, 5],
# >>        [6, 7, 8]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ29:array([[0, 1, 2],
# >>        [3, 4, 5],
# >>        [6, 7, 8]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ76:array([[1., 0., 0.],
# >>        [0., 1., 0.],
# >>        [0., 0., 1.]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ57:array([[1., 0., 0.],
# >>        [0., 1., 0.],
# >>        [0., 0., 1.]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ41:array([[1., 0., 0.],
# >>        [0., 1., 0.],
# >>        [0., 0., 1.]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ37:array([[1., 0., 0.],
# >>        [0., 1., 0.],
# >>        [0., 0., 1.]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ76:array([[[0.96982648, 0.05520005, 0.4758966 ],
# >>         [0.69822108, 0.35048344, 0.41423454],
# >>         [0.32863349, 0.86476245, 0.55937465]],
# >> 
# >>        [[0.74348108, 0.76843644, 0.38060406],
# >>         [0.26579548, 0.50233571, 0.55972422],
# >>         [0.93844882, 0.94156876, 0.42414961]],
# >> 
# >>        [[0.68916808, 0.18299452, 0.31102706],
# >>         [0.41010695, 0.17850581, 0.83447955],
# >>         [0.74874366, 0.25016077, 0.16408982]]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ57:array([[[0.96982648, 0.05520005, 0.4758966 ],
# >>         [0.69822108, 0.35048344, 0.41423454],
# >>         [0.32863349, 0.86476245, 0.55937465]],
# >> 
# >>        [[0.74348108, 0.76843644, 0.38060406],
# >>         [0.26579548, 0.50233571, 0.55972422],
# >>         [0.93844882, 0.94156876, 0.42414961]],
# >> 
# >>        [[0.68916808, 0.18299452, 0.31102706],
# >>         [0.41010695, 0.17850581, 0.83447955],
# >>         [0.74874366, 0.25016077, 0.16408982]]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ41:array([[[0.96982648, 0.05520005, 0.4758966 ],
# >>         [0.69822108, 0.35048344, 0.41423454],
# >>         [0.32863349, 0.86476245, 0.55937465]],
# >> 
# >>        [[0.74348108, 0.76843644, 0.38060406],
# >>         [0.26579548, 0.50233571, 0.55972422],
# >>         [0.93844882, 0.94156876, 0.42414961]],
# >> 
# >>        [[0.68916808, 0.18299452, 0.31102706],
# >>         [0.41010695, 0.17850581, 0.83447955],
# >>         [0.74874366, 0.25016077, 0.16408982]]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ76:array([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ57:array([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
# >>        [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]])ZZ󰀀ZZ
# >> ZZ󰀀ZZ76:array([[0, 0, 0, 0, 0],
# >>        [1, 0, 0, 0, 0],
# >>        [0, 2, 0, 0, 0],
# >>        [0, 0, 3, 0, 0],
# >>        [0, 0, 0, 4, 0]])ZZ󰀀ZZ
