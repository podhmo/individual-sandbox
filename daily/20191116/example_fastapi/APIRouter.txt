fastapi.routing:APIRouter <- starlette.routing:Router <- builtins:object
    [method, OVERRIDE] __init__(self, routes: List[starlette.routing.BaseRoute] = None, redirect_slashes: bool = True, default: Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[NoneType]]], Awaitable[NoneType]] = None, dependency_overrides_provider: Any = None, route_class: Type[fastapi.routing.APIRoute] = <class 'fastapi.routing.APIRoute'>) -> None
    [method] delete(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
        [method] api_route(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: List[str] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
            [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
    [method] get(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
        [method] api_route(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: List[str] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
            [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
    [method] head(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
        [method] api_route(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: List[str] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
            [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
    [method] include_router(self, router: 'APIRouter', *, prefix: str = '', tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, responses: Dict[Union[int, str], Dict[str, Any]] = None, default_response_class: Union[Type[starlette.responses.Response], NoneType] = None) -> None
        [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
        [method] add_api_websocket_route(self, path: str, endpoint: Callable, name: str = None) -> None
    [method] options(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
        [method] api_route(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: List[str] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
            [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
    [method] patch(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
        [method] api_route(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: List[str] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
            [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
    [method] post(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
        [method] api_route(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: List[str] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
            [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
    [method] put(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
        [method] api_route(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: List[str] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
            [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
    [method] trace(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
        [method] api_route(self, path: str, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: List[str] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None) -> Callable
            [method] add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[Any] = None, status_code: int = 200, tags: List[str] = None, dependencies: Sequence[fastapi.params.Depends] = None, summary: str = None, description: str = None, response_description: str = 'Successful Response', responses: Dict[Union[int, str], Dict[str, Any]] = None, deprecated: bool = None, methods: Union[Set[str], List[str], NoneType] = None, operation_id: str = None, response_model_include: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = None, response_model_exclude: Union[Set[Union[int, str]], Dict[Union[int, str], Any]] = set(), response_model_by_alias: bool = True, response_model_skip_defaults: bool = False, include_in_schema: bool = True, response_class: Type[starlette.responses.Response] = None, name: str = None, route_class_override: Union[Type[fastapi.routing.APIRoute], NoneType] = None) -> None
    [method] websocket(self, path: str, name: str = None) -> Callable
        [method] add_api_websocket_route(self, path: str, endpoint: Callable, name: str = None) -> None

starlette.routing:Router <- builtins:object
    [method, OVERRIDE] __call__(self, scope: MutableMapping[str, Any], receive: Callable[[], Awaitable[MutableMapping[str, Any]]], send: Callable[[MutableMapping[str, Any]], Awaitable[NoneType]]) -> None
    [method, OVERRIDE] __eq__(self, other: Any) -> bool
    [method, OVERRIDE] __init__(self, routes: List[starlette.routing.BaseRoute] = None, redirect_slashes: bool = True, default: Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[NoneType]]], Awaitable[NoneType]] = None) -> None
        [method] not_found(self, scope: MutableMapping[str, Any], receive: Callable[[], Awaitable[MutableMapping[str, Any]]], send: Callable[[MutableMapping[str, Any]], Awaitable[NoneType]]) -> None
    [method] host(self, host: str, app: Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[NoneType]]], Awaitable[NoneType]], name: str = None) -> None
    [method] mount(self, path: str, app: Callable[[MutableMapping[str, Any], Callable[[], Awaitable[MutableMapping[str, Any]]], Callable[[MutableMapping[str, Any]], Awaitable[NoneType]]], Awaitable[NoneType]], name: str = None) -> None
    [method] route(self, path: str, methods: List[str] = None, name: str = None, include_in_schema: bool = True) -> Callable
        [method] add_route(self, path: str, endpoint: Callable, methods: List[str] = None, name: str = None, include_in_schema: bool = True) -> None
    [method] url_path_for(self, name: str, **path_params: str) -> starlette.datastructures.URLPath
    [method] websocket_route(self, path: str, name: str = None) -> Callable
        [method] add_websocket_route(self, path: str, endpoint: Callable, name: str = None) -> None

