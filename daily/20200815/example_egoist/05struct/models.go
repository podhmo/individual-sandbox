package model

import (
	"github.com/podhmo/maperr"
	"encoding/json"
)

// this file is generated by egoist.generators.structkit

type KeyValueStore struct {

}


type Request struct {
	Key string `json:"key"`
}

func (r *Request) UnmarshalJSON(b []byte) error {
	var err *maperr.Error

	// loading internal data
	var inner struct {
		Key *string `json:"key"`// required
	}
	if rawErr := json.Unmarshal(b, &inner); rawErr != nil  {
		return err.AddSummary(rawErr.Error())
	}

	// binding field value and required check
	{
		if inner.Key != nil  {
			r.Key = *inner.Key
		} else  {
			err = err.Add("key", maperr.Message{Text: "required"})
		}
	}

	return err.Untyped()
}

type Response struct {
	Value string `json:"value"`
}

func (r *Response) UnmarshalJSON(b []byte) error {
	var err *maperr.Error

	// loading internal data
	var inner struct {
		Value *string `json:"value"`// required
	}
	if rawErr := json.Unmarshal(b, &inner); rawErr != nil  {
		return err.AddSummary(rawErr.Error())
	}

	// binding field value and required check
	{
		if inner.Value != nil  {
			r.Value = *inner.Value
		} else  {
			err = err.Add("value", maperr.Message{Text: "required"})
		}
	}

	return err.Untyped()
}