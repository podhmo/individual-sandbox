# command-line-arguments
go.builtin.error.Error STEXT dupok size=130 args=0x20 locals=0x30
	0x0000 00000 (<autogenerated>:1)	TEXT	go.builtin.error.Error(SB), DUPOK|WRAPPER|ABIInternal, $48-32
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	PCDATA	$0, $-2
	0x000d 00013 (<autogenerated>:1)	JLS	108
	0x000f 00015 (<autogenerated>:1)	PCDATA	$0, $-1
	0x000f 00015 (<autogenerated>:1)	SUBQ	$48, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 40(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	40(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	115
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·abb2c5050fe821353449583ee1559325(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·2589ca35330fc0fce83503f4569854a0(SB)
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVUPS	X0, "".~r0+72(SP)
	0x002e 00046 (<autogenerated>:1)	MOVQ	""..this+56(SP), AX
	0x0033 00051 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0035 00053 (<autogenerated>:1)	MOVQ	""..this+64(SP), CX
	0x003a 00058 (<autogenerated>:1)	MOVQ	24(AX), AX
	0x003e 00062 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0042 00066 (<autogenerated>:1)	PCDATA	$1, $1
	0x0042 00066 (<autogenerated>:1)	CALL	AX
	0x0044 00068 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0049 00073 (<autogenerated>:1)	MOVQ	8(SP), CX
	0x004e 00078 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_2+24(SP)
	0x0053 00083 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+32(SP)
	0x0058 00088 (<autogenerated>:1)	MOVQ	CX, "".~r0+72(SP)
	0x005d 00093 (<autogenerated>:1)	MOVQ	AX, "".~r0+80(SP)
	0x0062 00098 (<autogenerated>:1)	MOVQ	40(SP), BP
	0x0067 00103 (<autogenerated>:1)	ADDQ	$48, SP
	0x006b 00107 (<autogenerated>:1)	RET
	0x006c 00108 (<autogenerated>:1)	NOP
	0x006c 00108 (<autogenerated>:1)	PCDATA	$1, $-1
	0x006c 00108 (<autogenerated>:1)	PCDATA	$0, $-2
	0x006c 00108 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0071 00113 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0071 00113 (<autogenerated>:1)	JMP	0
	0x0073 00115 (<autogenerated>:1)	LEAQ	56(SP), DI
	0x0078 00120 (<autogenerated>:1)	CMPQ	(BX), DI
	0x007b 00123 (<autogenerated>:1)	JNE	38
	0x007d 00125 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0080 00128 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 5d 48  eH..%....H;a.v]H
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 8b 59  ..0H.l$(H.l$(H.Y
	0x0020 20 48 85 db 75 4d 0f 57 c0 0f 11 44 24 48 48 8b   H..uM.W...D$HH.
	0x0030 44 24 38 84 00 48 8b 4c 24 40 48 8b 40 18 48 89  D$8..H.L$@H.@.H.
	0x0040 0c 24 ff d0 48 8b 44 24 10 48 8b 4c 24 08 48 89  .$..H.D$.H.L$.H.
	0x0050 4c 24 18 48 89 44 24 20 48 89 4c 24 48 48 89 44  L$.H.D$ H.L$HH.D
	0x0060 24 50 48 8b 6c 24 28 48 83 c4 30 c3 e8 00 00 00  $PH.l$(H..0.....
	0x0070 00 eb 8d 48 8d 7c 24 38 48 39 3b 75 a9 48 89 23  ...H.|$8H9;u.H.#
	0x0080 eb a4                                            ..
	rel 5+4 t=17 TLS+0
	rel 66+0 t=11 +0
	rel 109+4 t=8 runtime.morestack_noctxt+0
"".run STEXT size=407 args=0x10 locals=0x130
	0x0000 00000 (/00recover/main.go:5)	TEXT	"".run(SB), ABIInternal, $304-16
	0x0000 00000 (/00recover/main.go:5)	MOVQ	(TLS), CX
	0x0009 00009 (/00recover/main.go:5)	LEAQ	-176(SP), AX
	0x0011 00017 (/00recover/main.go:5)	CMPQ	AX, 16(CX)
	0x0015 00021 (/00recover/main.go:5)	PCDATA	$0, $-2
	0x0015 00021 (/00recover/main.go:5)	JLS	397
	0x001b 00027 (/00recover/main.go:5)	PCDATA	$0, $-1
	0x001b 00027 (/00recover/main.go:5)	SUBQ	$304, SP
	0x0022 00034 (/00recover/main.go:5)	MOVQ	BP, 296(SP)
	0x002a 00042 (/00recover/main.go:5)	LEAQ	296(SP), BP
	0x0032 00050 (/00recover/main.go:5)	FUNCDATA	$0, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0032 00050 (/00recover/main.go:5)	FUNCDATA	$1, gclocals·2589ca35330fc0fce83503f4569854a0(SB)
	0x0032 00050 (/00recover/main.go:5)	FUNCDATA	$3, "".run.stkobj(SB)
	0x0032 00050 (/00recover/main.go:5)	XORPS	X0, X0
	0x0035 00053 (/00recover/main.go:5)	MOVUPS	X0, "".err+312(SP)
	0x003d 00061 (/00recover/main.go:6)	MOVL	$0, ""..autotmp_6+200(SP)
	0x0048 00072 (/00recover/main.go:6)	LEAQ	"".run.func1·f(SB), AX
	0x004f 00079 (/00recover/main.go:6)	MOVQ	AX, ""..autotmp_6+224(SP)
	0x0057 00087 (/00recover/main.go:6)	LEAQ	""..autotmp_6+200(SP), AX
	0x005f 00095 (/00recover/main.go:6)	MOVQ	AX, (SP)
	0x0063 00099 (/00recover/main.go:6)	PCDATA	$1, $1
	0x0063 00099 (/00recover/main.go:6)	CALL	runtime.deferprocStack(SB)
	0x0068 00104 (/00recover/main.go:6)	TESTL	AX, AX
	0x006a 00106 (/00recover/main.go:6)	JNE	375
	0x0070 00112 (/00recover/main.go:6)	JMP	114
	0x0072 00114 (/00recover/main.go:9)	MOVL	$8, ""..autotmp_7+120(SP)
	0x007a 00122 (/00recover/main.go:9)	LEAQ	"".run.func2·f(SB), AX
	0x0081 00129 (/00recover/main.go:9)	MOVQ	AX, ""..autotmp_7+144(SP)
	0x0089 00137 (/00recover/main.go:9)	LEAQ	"".err+312(SP), AX
	0x0091 00145 (/00recover/main.go:9)	MOVQ	AX, ""..autotmp_7+192(SP)
	0x0099 00153 (/00recover/main.go:9)	LEAQ	""..autotmp_7+120(SP), AX
	0x009e 00158 (/00recover/main.go:9)	MOVQ	AX, (SP)
	0x00a2 00162 (/00recover/main.go:9)	CALL	runtime.deferprocStack(SB)
	0x00a7 00167 (/00recover/main.go:9)	TESTL	AX, AX
	0x00a9 00169 (/00recover/main.go:9)	JNE	353
	0x00af 00175 (/00recover/main.go:9)	JMP	177
	0x00b1 00177 (/00recover/main.go:19)	MOVL	$0, ""..autotmp_8+40(SP)
	0x00b9 00185 (/00recover/main.go:19)	LEAQ	"".run.func3·f(SB), AX
	0x00c0 00192 (/00recover/main.go:19)	MOVQ	AX, ""..autotmp_8+64(SP)
	0x00c5 00197 (/00recover/main.go:19)	LEAQ	""..autotmp_8+40(SP), AX
	0x00ca 00202 (/00recover/main.go:19)	MOVQ	AX, (SP)
	0x00ce 00206 (/00recover/main.go:19)	CALL	runtime.deferprocStack(SB)
	0x00d3 00211 (/00recover/main.go:19)	TESTL	AX, AX
	0x00d5 00213 (/00recover/main.go:19)	JNE	330
	0x00d7 00215 (/00recover/main.go:19)	JMP	217
	0x00d9 00217 (/00recover/main.go:22)	MOVQ	$0, "".m+280(SP)
	0x00e5 00229 (/00recover/main.go:23)	LEAQ	type.map[string]int(SB), AX
	0x00ec 00236 (/00recover/main.go:23)	MOVQ	AX, (SP)
	0x00f0 00240 (/00recover/main.go:23)	MOVQ	$0, 8(SP)
	0x00f9 00249 (/00recover/main.go:23)	LEAQ	go.string."x"(SB), AX
	0x0100 00256 (/00recover/main.go:23)	MOVQ	AX, 16(SP)
	0x0105 00261 (/00recover/main.go:23)	MOVQ	$1, 24(SP)
	0x010e 00270 (/00recover/main.go:23)	CALL	runtime.mapassign_faststr(SB)
	0x0113 00275 (/00recover/main.go:23)	MOVQ	32(SP), AX
	0x0118 00280 (/00recover/main.go:23)	MOVQ	AX, ""..autotmp_5+288(SP)
	0x0120 00288 (/00recover/main.go:23)	TESTB	AL, (AX)
	0x0122 00290 (/00recover/main.go:23)	MOVQ	$1, (AX)
	0x0129 00297 (/00recover/main.go:24)	XORPS	X0, X0
	0x012c 00300 (/00recover/main.go:24)	MOVUPS	X0, "".err+312(SP)
	0x0134 00308 (/00recover/main.go:24)	XCHGL	AX, AX
	0x0135 00309 (/00recover/main.go:24)	CALL	runtime.deferreturn(SB)
	0x013a 00314 (/00recover/main.go:24)	MOVQ	296(SP), BP
	0x0142 00322 (/00recover/main.go:24)	ADDQ	$304, SP
	0x0149 00329 (/00recover/main.go:24)	RET
	0x014a 00330 (/00recover/main.go:19)	XCHGL	AX, AX
	0x014b 00331 (/00recover/main.go:19)	CALL	runtime.deferreturn(SB)
	0x0150 00336 (/00recover/main.go:19)	MOVQ	296(SP), BP
	0x0158 00344 (/00recover/main.go:19)	ADDQ	$304, SP
	0x015f 00351 (/00recover/main.go:19)	NOP
	0x0160 00352 (/00recover/main.go:19)	RET
	0x0161 00353 (/00recover/main.go:9)	XCHGL	AX, AX
	0x0162 00354 (/00recover/main.go:9)	CALL	runtime.deferreturn(SB)
	0x0167 00359 (/00recover/main.go:9)	MOVQ	296(SP), BP
	0x016f 00367 (/00recover/main.go:9)	ADDQ	$304, SP
	0x0176 00374 (/00recover/main.go:9)	RET
	0x0177 00375 (/00recover/main.go:6)	XCHGL	AX, AX
	0x0178 00376 (/00recover/main.go:6)	CALL	runtime.deferreturn(SB)
	0x017d 00381 (/00recover/main.go:6)	MOVQ	296(SP), BP
	0x0185 00389 (/00recover/main.go:6)	ADDQ	$304, SP
	0x018c 00396 (/00recover/main.go:6)	RET
	0x018d 00397 (/00recover/main.go:6)	NOP
	0x018d 00397 (/00recover/main.go:5)	PCDATA	$1, $-1
	0x018d 00397 (/00recover/main.go:5)	PCDATA	$0, $-2
	0x018d 00397 (/00recover/main.go:5)	CALL	runtime.morestack_noctxt(SB)
	0x0192 00402 (/00recover/main.go:5)	PCDATA	$0, $-1
	0x0192 00402 (/00recover/main.go:5)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 50 ff ff  eH..%....H..$P..
	0x0010 ff 48 3b 41 10 0f 86 72 01 00 00 48 81 ec 30 01  .H;A...r...H..0.
	0x0020 00 00 48 89 ac 24 28 01 00 00 48 8d ac 24 28 01  ..H..$(...H..$(.
	0x0030 00 00 0f 57 c0 0f 11 84 24 38 01 00 00 c7 84 24  ...W....$8.....$
	0x0040 c8 00 00 00 00 00 00 00 48 8d 05 00 00 00 00 48  ........H......H
	0x0050 89 84 24 e0 00 00 00 48 8d 84 24 c8 00 00 00 48  ..$....H..$....H
	0x0060 89 04 24 e8 00 00 00 00 85 c0 0f 85 07 01 00 00  ..$.............
	0x0070 eb 00 c7 44 24 78 08 00 00 00 48 8d 05 00 00 00  ...D$x....H.....
	0x0080 00 48 89 84 24 90 00 00 00 48 8d 84 24 38 01 00  .H..$....H..$8..
	0x0090 00 48 89 84 24 c0 00 00 00 48 8d 44 24 78 48 89  .H..$....H.D$xH.
	0x00a0 04 24 e8 00 00 00 00 85 c0 0f 85 b2 00 00 00 eb  .$..............
	0x00b0 00 c7 44 24 28 00 00 00 00 48 8d 05 00 00 00 00  ..D$(....H......
	0x00c0 48 89 44 24 40 48 8d 44 24 28 48 89 04 24 e8 00  H.D$@H.D$(H..$..
	0x00d0 00 00 00 85 c0 75 73 eb 00 48 c7 84 24 18 01 00  .....us..H..$...
	0x00e0 00 00 00 00 00 48 8d 05 00 00 00 00 48 89 04 24  .....H......H..$
	0x00f0 48 c7 44 24 08 00 00 00 00 48 8d 05 00 00 00 00  H.D$.....H......
	0x0100 48 89 44 24 10 48 c7 44 24 18 01 00 00 00 e8 00  H.D$.H.D$.......
	0x0110 00 00 00 48 8b 44 24 20 48 89 84 24 20 01 00 00  ...H.D$ H..$ ...
	0x0120 84 00 48 c7 00 01 00 00 00 0f 57 c0 0f 11 84 24  ..H.......W....$
	0x0130 38 01 00 00 90 e8 00 00 00 00 48 8b ac 24 28 01  8.........H..$(.
	0x0140 00 00 48 81 c4 30 01 00 00 c3 90 e8 00 00 00 00  ..H..0..........
	0x0150 48 8b ac 24 28 01 00 00 48 81 c4 30 01 00 00 90  H..$(...H..0....
	0x0160 c3 90 e8 00 00 00 00 48 8b ac 24 28 01 00 00 48  .......H..$(...H
	0x0170 81 c4 30 01 00 00 c3 90 e8 00 00 00 00 48 8b ac  ..0..........H..
	0x0180 24 28 01 00 00 48 81 c4 30 01 00 00 c3 e8 00 00  $(...H..0.......
	0x0190 00 00 e9 69 fe ff ff                             ...i...
	rel 5+4 t=17 TLS+0
	rel 75+4 t=16 "".run.func1·f+0
	rel 100+4 t=8 runtime.deferprocStack+0
	rel 125+4 t=16 "".run.func2·f+0
	rel 163+4 t=8 runtime.deferprocStack+0
	rel 188+4 t=16 "".run.func3·f+0
	rel 207+4 t=8 runtime.deferprocStack+0
	rel 232+4 t=16 type.map[string]int+0
	rel 252+4 t=16 go.string."x"+0
	rel 271+4 t=8 runtime.mapassign_faststr+0
	rel 310+4 t=8 runtime.deferreturn+0
	rel 332+4 t=8 runtime.deferreturn+0
	rel 355+4 t=8 runtime.deferreturn+0
	rel 377+4 t=8 runtime.deferreturn+0
	rel 398+4 t=8 runtime.morestack_noctxt+0
"".main STEXT size=165 args=0x0 locals=0x28
	0x0000 00000 (/00recover/main.go:27)	TEXT	"".main(SB), ABIInternal, $40-0
	0x0000 00000 (/00recover/main.go:27)	MOVQ	(TLS), CX
	0x0009 00009 (/00recover/main.go:27)	CMPQ	SP, 16(CX)
	0x000d 00013 (/00recover/main.go:27)	PCDATA	$0, $-2
	0x000d 00013 (/00recover/main.go:27)	JLS	152
	0x0013 00019 (/00recover/main.go:27)	PCDATA	$0, $-1
	0x0013 00019 (/00recover/main.go:27)	SUBQ	$40, SP
	0x0017 00023 (/00recover/main.go:27)	MOVQ	BP, 32(SP)
	0x001c 00028 (/00recover/main.go:27)	LEAQ	32(SP), BP
	0x0021 00033 (/00recover/main.go:27)	FUNCDATA	$0, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0021 00033 (/00recover/main.go:27)	FUNCDATA	$1, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0021 00033 (/00recover/main.go:28)	PCDATA	$1, $0
	0x0021 00033 (/00recover/main.go:28)	CALL	"".run(SB)
	0x0026 00038 (/00recover/main.go:28)	MOVQ	(SP), AX
	0x002a 00042 (/00recover/main.go:28)	MOVQ	8(SP), CX
	0x002f 00047 (/00recover/main.go:28)	MOVQ	AX, "".err+16(SP)
	0x0034 00052 (/00recover/main.go:28)	MOVQ	CX, "".err+24(SP)
	0x0039 00057 (/00recover/main.go:28)	TESTQ	AX, AX
	0x003c 00060 (/00recover/main.go:28)	JNE	66
	0x003e 00062 (/00recover/main.go:28)	NOP
	0x0040 00064 (/00recover/main.go:28)	JMP	150
	0x0042 00066 (/00recover/main.go:29)	PCDATA	$1, $1
	0x0042 00066 (/00recover/main.go:29)	CALL	runtime.printlock(SB)
	0x0047 00071 (/00recover/main.go:29)	LEAQ	go.string."!! %+v "(SB), AX
	0x004e 00078 (/00recover/main.go:29)	MOVQ	AX, (SP)
	0x0052 00082 (/00recover/main.go:29)	MOVQ	$7, 8(SP)
	0x005b 00091 (/00recover/main.go:29)	NOP
	0x0060 00096 (/00recover/main.go:29)	CALL	runtime.printstring(SB)
	0x0065 00101 (/00recover/main.go:29)	MOVQ	"".err+16(SP), AX
	0x006a 00106 (/00recover/main.go:29)	MOVQ	"".err+24(SP), CX
	0x006f 00111 (/00recover/main.go:29)	MOVQ	AX, (SP)
	0x0073 00115 (/00recover/main.go:29)	MOVQ	CX, 8(SP)
	0x0078 00120 (/00recover/main.go:29)	PCDATA	$1, $0
	0x0078 00120 (/00recover/main.go:29)	CALL	runtime.printiface(SB)
	0x007d 00125 (/00recover/main.go:29)	NOP
	0x0080 00128 (/00recover/main.go:29)	CALL	runtime.printnl(SB)
	0x0085 00133 (/00recover/main.go:29)	CALL	runtime.printunlock(SB)
	0x008a 00138 (/00recover/main.go:29)	JMP	140
	0x008c 00140 (<unknown line number>)	PCDATA	$1, $-1
	0x008c 00140 (<unknown line number>)	MOVQ	32(SP), BP
	0x0091 00145 (<unknown line number>)	ADDQ	$40, SP
	0x0095 00149 (<unknown line number>)	RET
	0x0096 00150 (/00recover/main.go:28)	JMP	140
	0x0098 00152 (/00recover/main.go:28)	NOP
	0x0098 00152 (/00recover/main.go:27)	PCDATA	$1, $-1
	0x0098 00152 (/00recover/main.go:27)	PCDATA	$0, $-2
	0x0098 00152 (/00recover/main.go:27)	CALL	runtime.morestack_noctxt(SB)
	0x009d 00157 (/00recover/main.go:27)	PCDATA	$0, $-1
	0x009d 00157 (/00recover/main.go:27)	NOP
	0x00a0 00160 (/00recover/main.go:27)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 85  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 28 48 89 6c 24 20 48 8d 6c 24  ...H..(H.l$ H.l$
	0x0020 20 e8 00 00 00 00 48 8b 04 24 48 8b 4c 24 08 48   .....H..$H.L$.H
	0x0030 89 44 24 10 48 89 4c 24 18 48 85 c0 75 04 66 90  .D$.H.L$.H..u.f.
	0x0040 eb 54 e8 00 00 00 00 48 8d 05 00 00 00 00 48 89  .T.....H......H.
	0x0050 04 24 48 c7 44 24 08 07 00 00 00 0f 1f 44 00 00  .$H.D$.......D..
	0x0060 e8 00 00 00 00 48 8b 44 24 10 48 8b 4c 24 18 48  .....H.D$.H.L$.H
	0x0070 89 04 24 48 89 4c 24 08 e8 00 00 00 00 0f 1f 00  ..$H.L$.........
	0x0080 e8 00 00 00 00 e8 00 00 00 00 eb 00 48 8b 6c 24  ............H.l$
	0x0090 20 48 83 c4 28 c3 eb f4 e8 00 00 00 00 0f 1f 00   H..(...........
	0x00a0 e9 5b ff ff ff                                   .[...
	rel 5+4 t=17 TLS+0
	rel 34+4 t=8 "".run+0
	rel 67+4 t=8 runtime.printlock+0
	rel 74+4 t=16 go.string."!! %+v "+0
	rel 97+4 t=8 runtime.printstring+0
	rel 121+4 t=8 runtime.printiface+0
	rel 129+4 t=8 runtime.printnl+0
	rel 134+4 t=8 runtime.printunlock+0
	rel 153+4 t=8 runtime.morestack_noctxt+0
"".run.func1 STEXT size=86 args=0x0 locals=0x18
	0x0000 00000 (/00recover/main.go:6)	TEXT	"".run.func1(SB), ABIInternal, $24-0
	0x0000 00000 (/00recover/main.go:6)	MOVQ	(TLS), CX
	0x0009 00009 (/00recover/main.go:6)	CMPQ	SP, 16(CX)
	0x000d 00013 (/00recover/main.go:6)	PCDATA	$0, $-2
	0x000d 00013 (/00recover/main.go:6)	JLS	79
	0x000f 00015 (/00recover/main.go:6)	PCDATA	$0, $-1
	0x000f 00015 (/00recover/main.go:6)	SUBQ	$24, SP
	0x0013 00019 (/00recover/main.go:6)	MOVQ	BP, 16(SP)
	0x0018 00024 (/00recover/main.go:6)	LEAQ	16(SP), BP
	0x001d 00029 (/00recover/main.go:6)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/00recover/main.go:6)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/00recover/main.go:7)	PCDATA	$1, $0
	0x001d 00029 (/00recover/main.go:7)	NOP
	0x0020 00032 (/00recover/main.go:7)	CALL	runtime.printlock(SB)
	0x0025 00037 (/00recover/main.go:7)	LEAQ	go.string."after\n"(SB), AX
	0x002c 00044 (/00recover/main.go:7)	MOVQ	AX, (SP)
	0x0030 00048 (/00recover/main.go:7)	MOVQ	$6, 8(SP)
	0x0039 00057 (/00recover/main.go:7)	CALL	runtime.printstring(SB)
	0x003e 00062 (/00recover/main.go:7)	NOP
	0x0040 00064 (/00recover/main.go:7)	CALL	runtime.printunlock(SB)
	0x0045 00069 (/00recover/main.go:8)	MOVQ	16(SP), BP
	0x004a 00074 (/00recover/main.go:8)	ADDQ	$24, SP
	0x004e 00078 (/00recover/main.go:8)	RET
	0x004f 00079 (/00recover/main.go:8)	NOP
	0x004f 00079 (/00recover/main.go:6)	PCDATA	$1, $-1
	0x004f 00079 (/00recover/main.go:6)	PCDATA	$0, $-2
	0x004f 00079 (/00recover/main.go:6)	CALL	runtime.morestack_noctxt(SB)
	0x0054 00084 (/00recover/main.go:6)	PCDATA	$0, $-1
	0x0054 00084 (/00recover/main.go:6)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 40 48  eH..%....H;a.v@H
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 0f 1f 00  ...H.l$.H.l$....
	0x0020 e8 00 00 00 00 48 8d 05 00 00 00 00 48 89 04 24  .....H......H..$
	0x0030 48 c7 44 24 08 06 00 00 00 e8 00 00 00 00 66 90  H.D$..........f.
	0x0040 e8 00 00 00 00 48 8b 6c 24 10 48 83 c4 18 c3 e8  .....H.l$.H.....
	0x0050 00 00 00 00 eb aa                                ......
	rel 5+4 t=17 TLS+0
	rel 33+4 t=8 runtime.printlock+0
	rel 40+4 t=16 go.string."after\n"+0
	rel 58+4 t=8 runtime.printstring+0
	rel 65+4 t=8 runtime.printunlock+0
	rel 80+4 t=8 runtime.morestack_noctxt+0
"".run.func2 STEXT size=500 args=0x8 locals=0x80
	0x0000 00000 (/00recover/main.go:9)	TEXT	"".run.func2(SB), ABIInternal, $128-8
	0x0000 00000 (/00recover/main.go:9)	MOVQ	(TLS), CX
	0x0009 00009 (/00recover/main.go:9)	CMPQ	SP, 16(CX)
	0x000d 00013 (/00recover/main.go:9)	PCDATA	$0, $-2
	0x000d 00013 (/00recover/main.go:9)	JLS	490
	0x0013 00019 (/00recover/main.go:9)	PCDATA	$0, $-1
	0x0013 00019 (/00recover/main.go:9)	ADDQ	$-128, SP
	0x0017 00023 (/00recover/main.go:9)	MOVQ	BP, 120(SP)
	0x001c 00028 (/00recover/main.go:9)	LEAQ	120(SP), BP
	0x0021 00033 (/00recover/main.go:9)	FUNCDATA	$0, gclocals·0e942f96b37a3a54dce69fe4b1f12e5a(SB)
	0x0021 00033 (/00recover/main.go:9)	FUNCDATA	$1, gclocals·4606476bc69795cd8c17f14d6bb31103(SB)
	0x0021 00033 (/00recover/main.go:10)	PCDATA	$1, $0
	0x0021 00033 (/00recover/main.go:10)	CALL	runtime.printlock(SB)
	0x0026 00038 (/00recover/main.go:10)	LEAQ	go.string."recover\n"(SB), AX
	0x002d 00045 (/00recover/main.go:10)	MOVQ	AX, (SP)
	0x0031 00049 (/00recover/main.go:10)	MOVQ	$8, 8(SP)
	0x003a 00058 (/00recover/main.go:10)	CALL	runtime.printstring(SB)
	0x003f 00063 (/00recover/main.go:10)	NOP
	0x0040 00064 (/00recover/main.go:10)	CALL	runtime.printunlock(SB)
	0x0045 00069 (/00recover/main.go:11)	LEAQ	""..fp+136(SP), AX
	0x004d 00077 (/00recover/main.go:11)	MOVQ	AX, (SP)
	0x0051 00081 (/00recover/main.go:11)	CALL	runtime.gorecover(SB)
	0x0056 00086 (/00recover/main.go:11)	MOVQ	8(SP), AX
	0x005b 00091 (/00recover/main.go:11)	MOVQ	16(SP), CX
	0x0060 00096 (/00recover/main.go:11)	MOVQ	AX, "".r+72(SP)
	0x0065 00101 (/00recover/main.go:11)	MOVQ	CX, "".r+80(SP)
	0x006a 00106 (/00recover/main.go:12)	TESTQ	AX, AX
	0x006d 00109 (/00recover/main.go:12)	JNE	116
	0x006f 00111 (/00recover/main.go:12)	JMP	411
	0x0074 00116 (/00recover/main.go:16)	PCDATA	$1, $1
	0x0074 00116 (/00recover/main.go:16)	CALL	runtime.printlock(SB)
	0x0079 00121 (/00recover/main.go:16)	LEAQ	go.string."\t-- "(SB), AX
	0x0080 00128 (/00recover/main.go:16)	MOVQ	AX, (SP)
	0x0084 00132 (/00recover/main.go:16)	MOVQ	$4, 8(SP)
	0x008d 00141 (/00recover/main.go:16)	CALL	runtime.printstring(SB)
	0x0092 00146 (/00recover/main.go:16)	MOVQ	"".r+72(SP), AX
	0x0097 00151 (/00recover/main.go:16)	MOVQ	"".r+80(SP), CX
	0x009c 00156 (/00recover/main.go:16)	MOVQ	AX, (SP)
	0x00a0 00160 (/00recover/main.go:16)	MOVQ	CX, 8(SP)
	0x00a5 00165 (/00recover/main.go:16)	CALL	runtime.printeface(SB)
	0x00aa 00170 (/00recover/main.go:16)	CALL	runtime.printnl(SB)
	0x00af 00175 (/00recover/main.go:16)	CALL	runtime.printunlock(SB)
	0x00b4 00180 (/00recover/main.go:17)	XORPS	X0, X0
	0x00b7 00183 (/00recover/main.go:17)	MOVUPS	X0, ""..autotmp_4+104(SP)
	0x00bc 00188 (/00recover/main.go:17)	MOVQ	"".r+72(SP), AX
	0x00c1 00193 (/00recover/main.go:17)	MOVQ	"".r+80(SP), CX
	0x00c6 00198 (/00recover/main.go:17)	LEAQ	type.string(SB), DX
	0x00cd 00205 (/00recover/main.go:17)	CMPQ	AX, DX
	0x00d0 00208 (/00recover/main.go:17)	JEQ	215
	0x00d2 00210 (/00recover/main.go:17)	JMP	463
	0x00d7 00215 (/00recover/main.go:17)	MOVQ	(CX), AX
	0x00da 00218 (/00recover/main.go:17)	MOVQ	8(CX), CX
	0x00de 00222 (/00recover/main.go:17)	MOVQ	AX, ""..autotmp_4+104(SP)
	0x00e3 00227 (/00recover/main.go:17)	MOVQ	CX, ""..autotmp_4+112(SP)
	0x00e8 00232 (/00recover/main.go:17)	MOVQ	AX, errors.text+56(SP)
	0x00ed 00237 (/00recover/main.go:17)	MOVQ	CX, errors.text+64(SP)
	0x00f2 00242 (/00recover/main.go:17)	XORPS	X0, X0
	0x00f5 00245 (/00recover/main.go:17)	MOVUPS	X0, "".~R0+40(SP)
	0x00fa 00250 (<unknown line number>)	NOP
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0101 00257 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0105 00261 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0105 00261 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x010a 00266 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x010f 00271 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+24(SP)
	0x0114 00276 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x0119 00281 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+64(SP), CX
	0x011e 00286 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, 8(DI)
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	JEQ	301
	0x012b 00299 ($GOROOT/src/errors/errors.go:59)	JMP	404
	0x012d 00301 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (DI)
	0x0130 00304 ($GOROOT/src/errors/errors.go:59)	JMP	306
	0x0132 00306 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-1
	0x0132 00306 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+24(SP), AX
	0x0137 00311 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+32(SP)
	0x013c 00316 (/00recover/main.go:17)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x0143 00323 (/00recover/main.go:17)	MOVQ	CX, ""..autotmp_7+88(SP)
	0x0148 00328 (/00recover/main.go:17)	MOVQ	AX, ""..autotmp_7+96(SP)
	0x014d 00333 (/00recover/main.go:17)	MOVQ	CX, "".~R0+40(SP)
	0x0152 00338 (/00recover/main.go:17)	MOVQ	AX, "".~R0+48(SP)
	0x0157 00343 (/00recover/main.go:17)	JMP	345
	0x0159 00345 (/00recover/main.go:17)	MOVQ	"".&err+136(SP), AX
	0x0161 00353 (/00recover/main.go:17)	MOVQ	"".~R0+48(SP), CX
	0x0166 00358 (/00recover/main.go:17)	MOVQ	"".~R0+40(SP), DX
	0x016b 00363 (/00recover/main.go:17)	MOVQ	DX, (AX)
	0x016e 00366 (/00recover/main.go:17)	LEAQ	8(AX), DI
	0x0172 00370 (/00recover/main.go:17)	PCDATA	$0, $-2
	0x0172 00370 (/00recover/main.go:17)	CMPL	runtime.writeBarrier(SB), $0
	0x0179 00377 (/00recover/main.go:17)	JEQ	381
	0x017b 00379 (/00recover/main.go:17)	JMP	397
	0x017d 00381 (/00recover/main.go:17)	MOVQ	CX, 8(AX)
	0x0181 00385 (/00recover/main.go:17)	JMP	387
	0x0183 00387 (/00recover/main.go:18)	PCDATA	$0, $-1
	0x0183 00387 (/00recover/main.go:18)	PCDATA	$1, $-1
	0x0183 00387 (/00recover/main.go:18)	MOVQ	120(SP), BP
	0x0188 00392 (/00recover/main.go:18)	SUBQ	$-128, SP
	0x018c 00396 (/00recover/main.go:18)	RET
	0x018d 00397 (/00recover/main.go:17)	PCDATA	$0, $-2
	0x018d 00397 (/00recover/main.go:17)	CALL	runtime.gcWriteBarrierCX(SB)
	0x0192 00402 (/00recover/main.go:17)	JMP	387
	0x0194 00404 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x0199 00409 ($GOROOT/src/errors/errors.go:59)	JMP	306
	0x019b 00411 (/00recover/main.go:13)	PCDATA	$0, $-1
	0x019b 00411 (/00recover/main.go:13)	PCDATA	$1, $3
	0x019b 00411 (/00recover/main.go:13)	NOP
	0x01a0 00416 (/00recover/main.go:13)	CALL	runtime.printlock(SB)
	0x01a5 00421 (/00recover/main.go:13)	LEAQ	go.string."\tnil\n"(SB), AX
	0x01ac 00428 (/00recover/main.go:13)	MOVQ	AX, (SP)
	0x01b0 00432 (/00recover/main.go:13)	MOVQ	$5, 8(SP)
	0x01b9 00441 (/00recover/main.go:13)	CALL	runtime.printstring(SB)
	0x01be 00446 (/00recover/main.go:13)	NOP
	0x01c0 00448 (/00recover/main.go:13)	CALL	runtime.printunlock(SB)
	0x01c5 00453 (/00recover/main.go:14)	MOVQ	120(SP), BP
	0x01ca 00458 (/00recover/main.go:14)	SUBQ	$-128, SP
	0x01ce 00462 (/00recover/main.go:14)	RET
	0x01cf 00463 (/00recover/main.go:17)	MOVQ	AX, (SP)
	0x01d3 00467 (/00recover/main.go:17)	MOVQ	DX, 8(SP)
	0x01d8 00472 (/00recover/main.go:17)	LEAQ	type.interface {}(SB), AX
	0x01df 00479 (/00recover/main.go:17)	MOVQ	AX, 16(SP)
	0x01e4 00484 (/00recover/main.go:17)	CALL	runtime.panicdottypeE(SB)
	0x01e9 00489 (/00recover/main.go:17)	XCHGL	AX, AX
	0x01ea 00490 (/00recover/main.go:17)	NOP
	0x01ea 00490 (/00recover/main.go:9)	PCDATA	$1, $-1
	0x01ea 00490 (/00recover/main.go:9)	PCDATA	$0, $-2
	0x01ea 00490 (/00recover/main.go:9)	CALL	runtime.morestack_noctxt(SB)
	0x01ef 00495 (/00recover/main.go:9)	PCDATA	$0, $-1
	0x01ef 00495 (/00recover/main.go:9)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 d7  eH..%....H;a....
	0x0010 01 00 00 48 83 c4 80 48 89 6c 24 78 48 8d 6c 24  ...H...H.l$xH.l$
	0x0020 78 e8 00 00 00 00 48 8d 05 00 00 00 00 48 89 04  x.....H......H..
	0x0030 24 48 c7 44 24 08 08 00 00 00 e8 00 00 00 00 90  $H.D$...........
	0x0040 e8 00 00 00 00 48 8d 84 24 88 00 00 00 48 89 04  .....H..$....H..
	0x0050 24 e8 00 00 00 00 48 8b 44 24 08 48 8b 4c 24 10  $.....H.D$.H.L$.
	0x0060 48 89 44 24 48 48 89 4c 24 50 48 85 c0 75 05 e9  H.D$HH.L$PH..u..
	0x0070 27 01 00 00 e8 00 00 00 00 48 8d 05 00 00 00 00  '........H......
	0x0080 48 89 04 24 48 c7 44 24 08 04 00 00 00 e8 00 00  H..$H.D$........
	0x0090 00 00 48 8b 44 24 48 48 8b 4c 24 50 48 89 04 24  ..H.D$HH.L$PH..$
	0x00a0 48 89 4c 24 08 e8 00 00 00 00 e8 00 00 00 00 e8  H.L$............
	0x00b0 00 00 00 00 0f 57 c0 0f 11 44 24 68 48 8b 44 24  .....W...D$hH.D$
	0x00c0 48 48 8b 4c 24 50 48 8d 15 00 00 00 00 48 39 d0  HH.L$PH......H9.
	0x00d0 74 05 e9 f8 00 00 00 48 8b 01 48 8b 49 08 48 89  t......H..H.I.H.
	0x00e0 44 24 68 48 89 4c 24 70 48 89 44 24 38 48 89 4c  D$hH.L$pH.D$8H.L
	0x00f0 24 40 0f 57 c0 0f 11 44 24 28 48 8d 05 00 00 00  $@.W...D$(H.....
	0x0100 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24 08 48  .H..$.....H.|$.H
	0x0110 89 7c 24 18 48 8b 44 24 38 48 8b 4c 24 40 48 89  .|$.H.D$8H.L$@H.
	0x0120 4f 08 83 3d 00 00 00 00 00 74 02 eb 67 48 89 07  O..=.....t..gH..
	0x0130 eb 00 48 8b 44 24 18 48 89 44 24 20 48 8d 0d 00  ..H.D$.H.D$ H...
	0x0140 00 00 00 48 89 4c 24 58 48 89 44 24 60 48 89 4c  ...H.L$XH.D$`H.L
	0x0150 24 28 48 89 44 24 30 eb 00 48 8b 84 24 88 00 00  $(H.D$0..H..$...
	0x0160 00 48 8b 4c 24 30 48 8b 54 24 28 48 89 10 48 8d  .H.L$0H.T$(H..H.
	0x0170 78 08 83 3d 00 00 00 00 00 74 02 eb 10 48 89 48  x..=.....t...H.H
	0x0180 08 eb 00 48 8b 6c 24 78 48 83 ec 80 c3 e8 00 00  ...H.l$xH.......
	0x0190 00 00 eb ef e8 00 00 00 00 eb 97 0f 1f 44 00 00  .............D..
	0x01a0 e8 00 00 00 00 48 8d 05 00 00 00 00 48 89 04 24  .....H......H..$
	0x01b0 48 c7 44 24 08 05 00 00 00 e8 00 00 00 00 66 90  H.D$..........f.
	0x01c0 e8 00 00 00 00 48 8b 6c 24 78 48 83 ec 80 c3 48  .....H.l$xH....H
	0x01d0 89 04 24 48 89 54 24 08 48 8d 05 00 00 00 00 48  ..$H.T$.H......H
	0x01e0 89 44 24 10 e8 00 00 00 00 90 e8 00 00 00 00 e9  .D$.............
	0x01f0 0c fe ff ff                                      ....
	rel 5+4 t=17 TLS+0
	rel 34+4 t=8 runtime.printlock+0
	rel 41+4 t=16 go.string."recover\n"+0
	rel 59+4 t=8 runtime.printstring+0
	rel 65+4 t=8 runtime.printunlock+0
	rel 82+4 t=8 runtime.gorecover+0
	rel 117+4 t=8 runtime.printlock+0
	rel 124+4 t=16 go.string."\t-- "+0
	rel 142+4 t=8 runtime.printstring+0
	rel 166+4 t=8 runtime.printeface+0
	rel 171+4 t=8 runtime.printnl+0
	rel 176+4 t=8 runtime.printunlock+0
	rel 201+4 t=16 type.string+0
	rel 253+4 t=16 type.errors.errorString+0
	rel 262+4 t=8 runtime.newobject+0
	rel 292+4 t=16 runtime.writeBarrier+-1
	rel 319+4 t=16 go.itab.*errors.errorString,error+0
	rel 372+4 t=16 runtime.writeBarrier+-1
	rel 398+4 t=8 runtime.gcWriteBarrierCX+0
	rel 405+4 t=8 runtime.gcWriteBarrier+0
	rel 417+4 t=8 runtime.printlock+0
	rel 424+4 t=16 go.string."\tnil\n"+0
	rel 442+4 t=8 runtime.printstring+0
	rel 449+4 t=8 runtime.printunlock+0
	rel 475+4 t=16 type.interface {}+0
	rel 485+4 t=8 runtime.panicdottypeE+0
	rel 491+4 t=8 runtime.morestack_noctxt+0
"".run.func3 STEXT size=86 args=0x0 locals=0x18
	0x0000 00000 (/00recover/main.go:19)	TEXT	"".run.func3(SB), ABIInternal, $24-0
	0x0000 00000 (/00recover/main.go:19)	MOVQ	(TLS), CX
	0x0009 00009 (/00recover/main.go:19)	CMPQ	SP, 16(CX)
	0x000d 00013 (/00recover/main.go:19)	PCDATA	$0, $-2
	0x000d 00013 (/00recover/main.go:19)	JLS	79
	0x000f 00015 (/00recover/main.go:19)	PCDATA	$0, $-1
	0x000f 00015 (/00recover/main.go:19)	SUBQ	$24, SP
	0x0013 00019 (/00recover/main.go:19)	MOVQ	BP, 16(SP)
	0x0018 00024 (/00recover/main.go:19)	LEAQ	16(SP), BP
	0x001d 00029 (/00recover/main.go:19)	FUNCDATA	$0, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/00recover/main.go:19)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (/00recover/main.go:20)	PCDATA	$1, $0
	0x001d 00029 (/00recover/main.go:20)	NOP
	0x0020 00032 (/00recover/main.go:20)	CALL	runtime.printlock(SB)
	0x0025 00037 (/00recover/main.go:20)	LEAQ	go.string."before\n"(SB), AX
	0x002c 00044 (/00recover/main.go:20)	MOVQ	AX, (SP)
	0x0030 00048 (/00recover/main.go:20)	MOVQ	$7, 8(SP)
	0x0039 00057 (/00recover/main.go:20)	CALL	runtime.printstring(SB)
	0x003e 00062 (/00recover/main.go:20)	NOP
	0x0040 00064 (/00recover/main.go:20)	CALL	runtime.printunlock(SB)
	0x0045 00069 (/00recover/main.go:21)	MOVQ	16(SP), BP
	0x004a 00074 (/00recover/main.go:21)	ADDQ	$24, SP
	0x004e 00078 (/00recover/main.go:21)	RET
	0x004f 00079 (/00recover/main.go:21)	NOP
	0x004f 00079 (/00recover/main.go:19)	PCDATA	$1, $-1
	0x004f 00079 (/00recover/main.go:19)	PCDATA	$0, $-2
	0x004f 00079 (/00recover/main.go:19)	CALL	runtime.morestack_noctxt(SB)
	0x0054 00084 (/00recover/main.go:19)	PCDATA	$0, $-1
	0x0054 00084 (/00recover/main.go:19)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 40 48  eH..%....H;a.v@H
	0x0010 83 ec 18 48 89 6c 24 10 48 8d 6c 24 10 0f 1f 00  ...H.l$.H.l$....
	0x0020 e8 00 00 00 00 48 8d 05 00 00 00 00 48 89 04 24  .....H......H..$
	0x0030 48 c7 44 24 08 07 00 00 00 e8 00 00 00 00 66 90  H.D$..........f.
	0x0040 e8 00 00 00 00 48 8b 6c 24 10 48 83 c4 18 c3 e8  .....H.l$.H.....
	0x0050 00 00 00 00 eb aa                                ......
	rel 5+4 t=17 TLS+0
	rel 33+4 t=8 runtime.printlock+0
	rel 40+4 t=16 go.string."before\n"+0
	rel 58+4 t=8 runtime.printstring+0
	rel 65+4 t=8 runtime.printunlock+0
	rel 80+4 t=8 runtime.morestack_noctxt+0
go.cuinfo.producer.main SDWARFINFO dupok size=0
	0x0000 2d 4e                                            -N
go.cuinfo.packagename.main SDWARFINFO dupok size=0
	0x0000 6d 61 69 6e                                      main
go.info.errors.New$abstract SDWARFINFO dupok size=26
	0x0000 04 65 72 72 6f 72 73 2e 4e 65 77 00 01 01 11 74  .errors.New....t
	0x0010 65 78 74 00 00 00 00 00 00 00                    ext.......
	rel 0+0 t=24 type.string+0
	rel 21+4 t=29 go.info.string+0
go.string."x" SRODATA dupok size=1
	0x0000 78                                               x
go.string."!! %+v" SRODATA dupok size=6
	0x0000 21 21 20 25 2b 76                                !! %+v
go.string."!! %+v " SRODATA dupok size=7
	0x0000 21 21 20 25 2b 76 20                             !! %+v 
go.string."after" SRODATA dupok size=5
	0x0000 61 66 74 65 72                                   after
go.string."after\n" SRODATA dupok size=6
	0x0000 61 66 74 65 72 0a                                after.
go.string."recover" SRODATA dupok size=7
	0x0000 72 65 63 6f 76 65 72                             recover
go.string."recover\n" SRODATA dupok size=8
	0x0000 72 65 63 6f 76 65 72 0a                          recover.
go.string."\tnil" SRODATA dupok size=4
	0x0000 09 6e 69 6c                                      .nil
go.string."\tnil\n" SRODATA dupok size=5
	0x0000 09 6e 69 6c 0a                                   .nil.
go.string."\t--" SRODATA dupok size=3
	0x0000 09 2d 2d                                         .--
go.string."\t-- " SRODATA dupok size=4
	0x0000 09 2d 2d 20                                      .-- 
go.string."before" SRODATA dupok size=6
	0x0000 62 65 66 6f 72 65                                before
go.string."before\n" SRODATA dupok size=7
	0x0000 62 65 66 6f 72 65 0a                             before.
go.string..gostring.110.6d96af891491c74d12e9f75cc7234da0015edb39095a5188c53bd6baf17ce562 SRODATA dupok size=110
	0x0000 30 77 af 0c 92 74 08 02 41 e1 c1 07 e6 d6 18 e6  0w...t..A.......
	0x0010 70 61 74 68 09 63 6f 6d 6d 61 6e 64 2d 6c 69 6e  path.command-lin
	0x0020 65 2d 61 72 67 75 6d 65 6e 74 73 0a 6d 6f 64 09  e-arguments.mod.
	0x0030 67 69 74 68 75 62 2e 63 6f 6d 2f 70 6f 64 68 6d  github.com/podhm
	0x0040 6f 2f 69 6e 64 69 76 69 64 75 61 6c 2d 73 61 6e  o/individual-san
	0x0050 64 62 6f 78 09 28 64 65 76 65 6c 29 09 0a f9 32  dbox.(devel)...2
	0x0060 43 31 86 18 20 72 00 82 42 10 41 16 d8 f2        C1.. r..B.A...
""..inittask SNOPTRDATA size=32
	0x0000 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 errors..inittask+0
runtime.modinfo SDATA size=16
	0x0000 00 00 00 00 00 00 00 00 6e 00 00 00 00 00 00 00  ........n.......
	rel 0+8 t=1 go.string..gostring.110.6d96af891491c74d12e9f75cc7234da0015edb39095a5188c53bd6baf17ce562+0
"".run.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".run.func1+0
"".run.func2·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".run.func2+0
"".run.func3·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".run.func3+0
runtime.nilinterequal·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.nilinterequal+0
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal64+0
runtime.gcbits.01 SRODATA dupok size=1
	0x0000 01                                               .
type..namedata.*interface {}- SRODATA dupok size=16
	0x0000 00 00 0d 2a 69 6e 74 65 72 66 61 63 65 20 7b 7d  ...*interface {}
type.*interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4f 0f 96 9d 08 08 08 36 00 00 00 00 00 00 00 00  O......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*interface {}-+0
	rel 48+8 t=1 type.interface {}+0
runtime.gcbits.02 SRODATA dupok size=1
	0x0000 02                                               .
type.interface {} SRODATA dupok size=80
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 e7 57 a0 18 02 08 08 14 00 00 00 00 00 00 00 00  .W..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.nilinterequal·f+0
	rel 32+8 t=1 runtime.gcbits.02+0
	rel 40+4 t=5 type..namedata.*interface {}-+0
	rel 44+4 t=6 type.*interface {}+0
	rel 56+8 t=1 type.interface {}+80
type..namedata.*[]uint8- SRODATA dupok size=11
	0x0000 00 00 08 2a 5b 5d 75 69 6e 74 38                 ...*[]uint8
type.*[]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a5 8e d0 69 08 08 08 36 00 00 00 00 00 00 00 00  ...i...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint8-+0
	rel 48+8 t=1 type.[]uint8+0
type.[]uint8 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 df 7e 2e 38 02 08 08 17 00 00 00 00 00 00 00 00  .~.8............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]uint8-+0
	rel 44+4 t=6 type.*[]uint8+0
	rel 48+8 t=1 type.uint8+0
type..namedata.*[8]uint8- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 38 5d 75 69 6e 74 38              ...*[8]uint8
type.*[8]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a9 89 a5 7a 08 08 08 36 00 00 00 00 00 00 00 00  ...z...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]uint8-+0
	rel 48+8 t=1 type.[8]uint8+0
runtime.gcbits. SRODATA dupok size=0
type.[8]uint8 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 3e f9 30 b4 0a 01 01 11 00 00 00 00 00 00 00 00  >.0.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[8]uint8-+0
	rel 44+4 t=6 type.*[8]uint8+0
	rel 48+8 t=1 type.uint8+0
	rel 56+8 t=1 type.[]uint8+0
type..namedata.*[]string- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 5d 73 74 72 69 6e 67              ...*[]string
type.*[]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 92 22 76 84 08 08 08 36 00 00 00 00 00 00 00 00  ."v....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]string-+0
	rel 48+8 t=1 type.[]string+0
type.[]string SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d3 a8 f3 0a 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]string-+0
	rel 44+4 t=6 type.*[]string+0
	rel 48+8 t=1 type.string+0
type..namedata.*[8]string- SRODATA dupok size=13
	0x0000 00 00 0a 2a 5b 38 5d 73 74 72 69 6e 67           ...*[8]string
type.*[8]string SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ad 94 14 6f 08 08 08 36 00 00 00 00 00 00 00 00  ...o...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]string-+0
	rel 48+8 t=1 type.noalg.[8]string+0
runtime.gcbits.5555 SRODATA dupok size=2
	0x0000 55 55                                            UU
type.noalg.[8]string SRODATA dupok size=72
	0x0000 80 00 00 00 00 00 00 00 78 00 00 00 00 00 00 00  ........x.......
	0x0010 55 53 8c 3e 02 08 08 11 00 00 00 00 00 00 00 00  US.>............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.5555+0
	rel 40+4 t=5 type..namedata.*[8]string-+0
	rel 44+4 t=6 type.*[8]string+0
	rel 48+8 t=1 type.string+0
	rel 56+8 t=1 type.[]string+0
type..namedata.*[]int- SRODATA dupok size=9
	0x0000 00 00 06 2a 5b 5d 69 6e 74                       ...*[]int
type.*[]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1b 31 52 88 08 08 08 36 00 00 00 00 00 00 00 00  .1R....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]int-+0
	rel 48+8 t=1 type.[]int+0
type.[]int SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8e 66 f9 1b 02 08 08 17 00 00 00 00 00 00 00 00  .f..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]int-+0
	rel 44+4 t=6 type.*[]int+0
	rel 48+8 t=1 type.int+0
type..namedata.*[8]int- SRODATA dupok size=10
	0x0000 00 00 07 2a 5b 38 5d 69 6e 74                    ...*[8]int
type.*[8]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f3 3f a8 3b 08 08 08 36 00 00 00 00 00 00 00 00  .?.;...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[8]int-+0
	rel 48+8 t=1 type.noalg.[8]int+0
type.noalg.[8]int SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 96 99 d5 05 02 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[8]int-+0
	rel 44+4 t=6 type.*[8]int+0
	rel 48+8 t=1 type.int+0
	rel 56+8 t=1 type.[]int+0
type..namedata.*map.bucket[string]int- SRODATA dupok size=25
	0x0000 00 00 16 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 73  ...*map.bucket[s
	0x0010 74 72 69 6e 67 5d 69 6e 74                       tring]int
type.*map.bucket[string]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c9 be cc 9c 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map.bucket[string]int-+0
	rel 48+8 t=1 type.noalg.map.bucket[string]int+0
runtime.gcbits.aaaa0002 SRODATA dupok size=4
	0x0000 aa aa 00 02                                      ....
type..importpath.. SRODATA dupok size=3
	0x0000 00 00 00                                         ...
type..namedata.topbits- SRODATA dupok size=10
	0x0000 00 00 07 74 6f 70 62 69 74 73                    ...topbits
type..namedata.keys- SRODATA dupok size=7
	0x0000 00 00 04 6b 65 79 73                             ...keys
type..namedata.elems- SRODATA dupok size=8
	0x0000 00 00 05 65 6c 65 6d 73                          ...elems
type..namedata.overflow- SRODATA dupok size=11
	0x0000 00 00 08 6f 76 65 72 66 6c 6f 77                 ...overflow
type.noalg.map.bucket[string]int SRODATA dupok size=176
	0x0000 d0 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x0010 5d 68 63 71 02 08 08 19 00 00 00 00 00 00 00 00  ]hcq............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 10 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 90 01 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.aaaa0002+0
	rel 40+4 t=5 type..namedata.*map.bucket[string]int-+0
	rel 44+4 t=6 type.*map.bucket[string]int+0
	rel 48+8 t=1 type..importpath..+0
	rel 56+8 t=1 type.noalg.map.bucket[string]int+80
	rel 80+8 t=1 type..namedata.topbits-+0
	rel 88+8 t=1 type.[8]uint8+0
	rel 104+8 t=1 type..namedata.keys-+0
	rel 112+8 t=1 type.noalg.[8]string+0
	rel 128+8 t=1 type..namedata.elems-+0
	rel 136+8 t=1 type.noalg.[8]int+0
	rel 152+8 t=1 type..namedata.overflow-+0
	rel 160+8 t=1 type.*map.bucket[string]int+0
runtime.strhash·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.strhash+0
type..namedata.*map[string]int- SRODATA dupok size=18
	0x0000 00 00 0f 2a 6d 61 70 5b 73 74 72 69 6e 67 5d 69  ...*map[string]i
	0x0010 6e 74                                            nt
type.*map[string]int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8e 5e 06 04 08 08 08 36 00 00 00 00 00 00 00 00  .^.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[string]int-+0
	rel 48+8 t=1 type.map[string]int+0
type.map[string]int SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e5 db c8 4a 02 08 08 35 00 00 00 00 00 00 00 00  ...J...5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 10 08 d0 00 0c 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*map[string]int-+0
	rel 44+4 t=6 type.*map[string]int+0
	rel 48+8 t=1 type.string+0
	rel 56+8 t=1 type.int+0
	rel 64+8 t=1 type.noalg.map.bucket[string]int+0
	rel 72+8 t=1 runtime.strhash·f+0
runtime.memequal0·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal0+0
type..namedata.*[0]uint8- SRODATA dupok size=12
	0x0000 00 00 09 2a 5b 30 5d 75 69 6e 74 38              ...*[0]uint8
type.*[0]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 be a5 63 b3 08 08 08 36 00 00 00 00 00 00 00 00  ..c....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[0]uint8-+0
	rel 48+8 t=1 type.[0]uint8+0
type.[0]uint8 SRODATA dupok size=72
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 93 13 6c e9 0a 01 01 11 00 00 00 00 00 00 00 00  ..l.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal0·f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*[0]uint8-+0
	rel 44+4 t=6 type.*[0]uint8+0
	rel 48+8 t=1 type.uint8+0
	rel 56+8 t=1 type.[]uint8+0
type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [0]uint8 }- SRODATA dupok size=190
	0x0000 00 00 bb 2a 73 74 72 75 63 74 20 7b 20 73 69 7a  ...*struct { siz
	0x0010 20 75 69 6e 74 33 32 3b 20 73 74 61 72 74 65 64   uint32; started
	0x0020 20 62 6f 6f 6c 3b 20 68 65 61 70 20 62 6f 6f 6c   bool; heap bool
	0x0030 3b 20 6f 70 65 6e 44 65 66 65 72 20 62 6f 6f 6c  ; openDefer bool
	0x0040 3b 20 73 70 20 75 69 6e 74 70 74 72 3b 20 70 63  ; sp uintptr; pc
	0x0050 20 75 69 6e 74 70 74 72 3b 20 66 6e 20 75 69 6e   uintptr; fn uin
	0x0060 74 70 74 72 3b 20 5f 70 61 6e 69 63 20 75 69 6e  tptr; _panic uin
	0x0070 74 70 74 72 3b 20 6c 69 6e 6b 20 75 69 6e 74 70  tptr; link uintp
	0x0080 74 72 3b 20 66 72 61 6d 65 70 63 20 75 69 6e 74  tr; framepc uint
	0x0090 70 74 72 3b 20 76 61 72 70 20 75 69 6e 74 70 74  ptr; varp uintpt
	0x00a0 72 3b 20 66 64 20 75 69 6e 74 70 74 72 3b 20 61  r; fd uintptr; a
	0x00b0 72 67 73 20 5b 30 5d 75 69 6e 74 38 20 7d        rgs [0]uint8 }
type.*struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 33 e6 af f9 08 08 08 36 00 00 00 00 00 00 00 00  3......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [0]uint8 }-+0
	rel 48+8 t=1 type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 }+0
type..importpath."". SRODATA dupok size=7
	0x0000 00 00 04 6d 61 69 6e                             ...main
type..namedata.siz- SRODATA dupok size=6
	0x0000 00 00 03 73 69 7a                                ...siz
type..namedata.started- SRODATA dupok size=10
	0x0000 00 00 07 73 74 61 72 74 65 64                    ...started
type..namedata.heap- SRODATA dupok size=7
	0x0000 00 00 04 68 65 61 70                             ...heap
type..namedata.openDefer- SRODATA dupok size=12
	0x0000 00 00 09 6f 70 65 6e 44 65 66 65 72              ...openDefer
type..namedata.sp- SRODATA dupok size=5
	0x0000 00 00 02 73 70                                   ...sp
type..namedata.pc- SRODATA dupok size=5
	0x0000 00 00 02 70 63                                   ...pc
type..namedata.fn- SRODATA dupok size=5
	0x0000 00 00 02 66 6e                                   ...fn
type..namedata._panic- SRODATA dupok size=9
	0x0000 00 00 06 5f 70 61 6e 69 63                       ..._panic
type..namedata.link- SRODATA dupok size=7
	0x0000 00 00 04 6c 69 6e 6b                             ...link
type..namedata.framepc- SRODATA dupok size=10
	0x0000 00 00 07 66 72 61 6d 65 70 63                    ...framepc
type..namedata.varp- SRODATA dupok size=7
	0x0000 00 00 04 76 61 72 70                             ...varp
type..namedata.fd- SRODATA dupok size=5
	0x0000 00 00 02 66 64                                   ...fd
type..namedata.args- SRODATA dupok size=7
	0x0000 00 00 04 61 72 67 73                             ...args
type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 } SRODATA dupok size=392
	0x0000 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0010 ec ff 07 77 02 08 08 19 00 00 00 00 00 00 00 00  ...w............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 0d 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 0a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x0100 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0130 00 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  ........`.......
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  p...............
	0x0160 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 90 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [0]uint8 }-+0
	rel 44+4 t=6 type.*struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 }+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [0]uint8 }+80
	rel 80+8 t=1 type..namedata.siz-+0
	rel 88+8 t=1 type.uint32+0
	rel 104+8 t=1 type..namedata.started-+0
	rel 112+8 t=1 type.bool+0
	rel 128+8 t=1 type..namedata.heap-+0
	rel 136+8 t=1 type.bool+0
	rel 152+8 t=1 type..namedata.openDefer-+0
	rel 160+8 t=1 type.bool+0
	rel 176+8 t=1 type..namedata.sp-+0
	rel 184+8 t=1 type.uintptr+0
	rel 200+8 t=1 type..namedata.pc-+0
	rel 208+8 t=1 type.uintptr+0
	rel 224+8 t=1 type..namedata.fn-+0
	rel 232+8 t=1 type.uintptr+0
	rel 248+8 t=1 type..namedata._panic-+0
	rel 256+8 t=1 type.uintptr+0
	rel 272+8 t=1 type..namedata.link-+0
	rel 280+8 t=1 type.uintptr+0
	rel 296+8 t=1 type..namedata.framepc-+0
	rel 304+8 t=1 type.uintptr+0
	rel 320+8 t=1 type..namedata.varp-+0
	rel 328+8 t=1 type.uintptr+0
	rel 344+8 t=1 type..namedata.fd-+0
	rel 352+8 t=1 type.uintptr+0
	rel 368+8 t=1 type..namedata.args-+0
	rel 376+8 t=1 type.[0]uint8+0
type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [8]uint8 }- SRODATA dupok size=190
	0x0000 00 00 bb 2a 73 74 72 75 63 74 20 7b 20 73 69 7a  ...*struct { siz
	0x0010 20 75 69 6e 74 33 32 3b 20 73 74 61 72 74 65 64   uint32; started
	0x0020 20 62 6f 6f 6c 3b 20 68 65 61 70 20 62 6f 6f 6c   bool; heap bool
	0x0030 3b 20 6f 70 65 6e 44 65 66 65 72 20 62 6f 6f 6c  ; openDefer bool
	0x0040 3b 20 73 70 20 75 69 6e 74 70 74 72 3b 20 70 63  ; sp uintptr; pc
	0x0050 20 75 69 6e 74 70 74 72 3b 20 66 6e 20 75 69 6e   uintptr; fn uin
	0x0060 74 70 74 72 3b 20 5f 70 61 6e 69 63 20 75 69 6e  tptr; _panic uin
	0x0070 74 70 74 72 3b 20 6c 69 6e 6b 20 75 69 6e 74 70  tptr; link uintp
	0x0080 74 72 3b 20 66 72 61 6d 65 70 63 20 75 69 6e 74  tr; framepc uint
	0x0090 70 74 72 3b 20 76 61 72 70 20 75 69 6e 74 70 74  ptr; varp uintpt
	0x00a0 72 3b 20 66 64 20 75 69 6e 74 70 74 72 3b 20 61  r; fd uintptr; a
	0x00b0 72 67 73 20 5b 38 5d 75 69 6e 74 38 20 7d        rgs [8]uint8 }
type.*struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [8]uint8 } SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 05 65 a5 79 08 08 08 36 00 00 00 00 00 00 00 00  .e.y...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64·f+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [8]uint8 }-+0
	rel 48+8 t=1 type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [8]uint8 }+0
type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [8]uint8 } SRODATA dupok size=392
	0x0000 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0010 e4 2b b1 79 02 08 08 19 00 00 00 00 00 00 00 00  .+.y............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 0d 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 0a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 0c 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x0100 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0130 00 00 00 00 00 00 00 00 60 00 00 00 00 00 00 00  ........`.......
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  p...............
	0x0160 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 90 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*struct { siz uint32; started bool; heap bool; openDefer bool; sp uintptr; pc uintptr; fn uintptr; _panic uintptr; link uintptr; framepc uintptr; varp uintptr; fd uintptr; args [8]uint8 }-+0
	rel 44+4 t=6 type.*struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [8]uint8 }+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type.noalg.struct { "".siz uint32; "".started bool; "".heap bool; "".openDefer bool; "".sp uintptr; "".pc uintptr; "".fn uintptr; ""._panic uintptr; "".link uintptr; "".framepc uintptr; "".varp uintptr; "".fd uintptr; "".args [8]uint8 }+80
	rel 80+8 t=1 type..namedata.siz-+0
	rel 88+8 t=1 type.uint32+0
	rel 104+8 t=1 type..namedata.started-+0
	rel 112+8 t=1 type.bool+0
	rel 128+8 t=1 type..namedata.heap-+0
	rel 136+8 t=1 type.bool+0
	rel 152+8 t=1 type..namedata.openDefer-+0
	rel 160+8 t=1 type.bool+0
	rel 176+8 t=1 type..namedata.sp-+0
	rel 184+8 t=1 type.uintptr+0
	rel 200+8 t=1 type..namedata.pc-+0
	rel 208+8 t=1 type.uintptr+0
	rel 224+8 t=1 type..namedata.fn-+0
	rel 232+8 t=1 type.uintptr+0
	rel 248+8 t=1 type..namedata._panic-+0
	rel 256+8 t=1 type.uintptr+0
	rel 272+8 t=1 type..namedata.link-+0
	rel 280+8 t=1 type.uintptr+0
	rel 296+8 t=1 type..namedata.framepc-+0
	rel 304+8 t=1 type.uintptr+0
	rel 320+8 t=1 type..namedata.varp-+0
	rel 328+8 t=1 type.uintptr+0
	rel 344+8 t=1 type..namedata.fd-+0
	rel 352+8 t=1 type.uintptr+0
	rel 368+8 t=1 type..namedata.args-+0
	rel 376+8 t=1 type.[8]uint8+0
go.itab.*errors.errorString,error SRODATA dupok size=32
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 14 f4 d0 87 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type.error+0
	rel 8+8 t=1 type.*errors.errorString+0
	rel 24+8 t=1 errors.(*errorString).Error+0
go.itablink.*errors.errorString,error SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*errors.errorString,error+0
type..importpath.errors. SRODATA dupok size=9
	0x0000 00 00 06 65 72 72 6f 72 73                       ...errors
type..importpath.unsafe. SRODATA dupok size=9
	0x0000 00 00 06 75 6e 73 61 66 65                       ...unsafe
gclocals·abb2c5050fe821353449583ee1559325 SRODATA dupok size=10
	0x0000 02 00 00 00 03 00 00 00 02 00                    ..........
gclocals·2589ca35330fc0fce83503f4569854a0 SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 00 00                    ..........
gclocals·568470801006e5c0dc3947ea998fe279 SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 00 02                    ..........
"".run.stkobj SRODATA size=24
	0x0000 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.error+0
gclocals·69c1753bd5f81501d95132d08af04464 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·33cdeccccebe80329f1fdbee7f5874cb SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·0e942f96b37a3a54dce69fe4b1f12e5a SRODATA dupok size=12
	0x0000 04 00 00 00 01 00 00 00 01 01 01 00              ............
gclocals·4606476bc69795cd8c17f14d6bb31103 SRODATA dupok size=16
	0x0000 04 00 00 00 0c 00 00 00 00 00 80 00 10 00 00 00  ................
