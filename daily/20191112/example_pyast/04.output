@decorator("before")
def foo(x, y, z) -> t.Optional[int]:
    """after"""

    def _internal(x, y, z):
        return x + y + z

    return _internal(x, y, y)


def bar(x) -> int:
    """before"""
    pass


class A:
    """after"""

    def f(self, x):
        """after"""
        pass

    # hmm
    def g(self, *args, **kwargs):  # oyoyo
        """after"""
        pass

    def h(self, x):
        """after"""
        pass




def boo(x) -> int:
    """after"""
    pass
