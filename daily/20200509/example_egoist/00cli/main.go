package main

import (
	"bytes"
	"encoding/json"
	"flag"
	"fmt"
	"log"
	"m/model"
	"os"
)

// this file is generated by egoist.generators.clikit

// Option ...
type Option struct {
	Title   string   // for `-title`
	Content string   // for `-content`
	Args    []string // cmd.Args
}

func main() {
	opt := &Option{}
	cmd := flag.NewFlagSet("cmd_hello", flag.ContinueOnError)

	cmd.StringVar(&opt.Title, "title", "", "-")
	cmd.StringVar(&opt.Content, "content", "", "-")

	if err := cmd.Parse(os.Args[1:]); err != nil {
		if err != flag.ErrHelp {
			cmd.Usage()
		}
		os.Exit(1)
	}
	opt.Args = cmd.Args()
	if err := run(opt); err != nil {
		log.Fatalf("!!%+v", err)
	}
}

func run(opt *Option) error {
	input := fmt.Sprintf(`{"title": %q}`, opt.Title)
	// input := fmt.Sprintf(`{"title": %q, "content": %q}`, opt.Title, opt.Content)

	b := bytes.NewBufferString(input)
	decoder := json.NewDecoder(b)

	var ob model.Article
	if err := decoder.Decode(&ob); err != nil {
		return err
	}
	fmt.Printf("got: %#+v\n", ob)
	return nil
}
