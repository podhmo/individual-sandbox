package complexmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Status status
// swagger:model status
type Status string

const (
	// StatusHungry captures enum value "hungry"
	StatusHungry Status = "hungry"
	// StatusAngry captures enum value "angry"
	StatusAngry Status = "angry"
	// StatusWeakly captures enum value "weakly"
	StatusWeakly Status = "weakly"
	// StatusSleepy captures enum value "sleepy"
	StatusSleepy Status = "sleepy"
	// StatusSoso captures enum value "soso"
	StatusSoso Status = "soso"
	// StatusHappy captures enum value "happy"
	StatusHappy Status = "happy"
)

// for schema
var statusEnum []interface{}

func init() {
	var res []Status
	if err := json.Unmarshal([]byte(`["hungry","angry","weakly","sleepy","soso","happy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		statusEnum = append(statusEnum, v)
	}
}

func (m Status) validateStatusEnum(path, location string, value Status) error {
	if err := validate.Enum(path, location, value, statusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this status
func (m Status) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
