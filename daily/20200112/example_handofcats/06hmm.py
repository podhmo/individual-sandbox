from prestring.python.parse import parse_file, PyTreeDumper

t = parse_file("05config.py")
PyTreeDumper().visit(t)

# file_input [5 children]
#   simple_stmt [2 children]
#     import_from [4 children]
#       NAME('from') [lineno=1, column=0, prefix='']
#       NAME('handofcats') [lineno=1, column=5, prefix=' ']
#       NAME('import') [lineno=1, column=16, prefix=' ']
#       import_as_names [3 children]
#         NAME('Config') [lineno=1, column=23, prefix=' ']
#         COMMA(',') [lineno=1, column=29, prefix='']
#         NAME('as_subcommand') [lineno=1, column=31, prefix=' ']
#     NEWLINE('\n') [lineno=1, column=44, prefix='']
#   decorated [2 children]
#     decorator [3 children]
#       AT('@') [lineno=4, column=0, prefix='\n\n']
#       NAME('as_subcommand') [lineno=4, column=1, prefix='']
#       NEWLINE('\n') [lineno=4, column=14, prefix='']
#     funcdef[name='foo'] [5 children]
#       NAME('def') [lineno=5, column=0, prefix='']
#       NAME('foo') [lineno=5, column=4, prefix=' ']
#       parameters [2 children]
#         LPAR('(') [lineno=5, column=7, prefix='']
#         RPAR(')') [lineno=5, column=8, prefix='']
#       COLON(':') [lineno=5, column=9, prefix='']
#       suite [4 children]
#         NEWLINE('\n') [lineno=5, column=10, prefix='']
#         INDENT('    ') [lineno=6, column=0, prefix='']
#         simple_stmt [2 children]
#           NAME('pass') [lineno=6, column=4, prefix='']
#           NEWLINE('\n') [lineno=6, column=8, prefix='']
#         DEDENT('') [lineno=9, column=0, prefix='\n\n']
#   simple_stmt [2 children]
#     expr_stmt [3 children]
#       NAME('cfg') [lineno=9, column=0, prefix='']
#       EQUAL('=') [lineno=9, column=4, prefix=' ']
#       power [2 children]
#         NAME('Config') [lineno=9, column=6, prefix=' ']
#         trailer [3 children]
#           LPAR('(') [lineno=9, column=12, prefix='']
#           argument [3 children]
#             NAME('ignore_logging') [lineno=9, column=13, prefix='']
#             EQUAL('=') [lineno=9, column=27, prefix='']
#             NAME('True') [lineno=9, column=28, prefix='']
#           RPAR(')') [lineno=9, column=32, prefix='']
#     NEWLINE('\n') [lineno=9, column=33, prefix='']
#   if_stmt [4 children]
#     NAME('if') [lineno=10, column=0, prefix='']
#     comparison [3 children]
#       NAME('__name__') [lineno=10, column=3, prefix=' ']
#       EQEQUAL('==') [lineno=10, column=12, prefix=' ']
#       STRING('"__main__"') [lineno=10, column=15, prefix=' ']
#     COLON(':') [lineno=10, column=25, prefix='']
#     suite [4 children]
#       NEWLINE('\n') [lineno=10, column=26, prefix='']
#       INDENT('    ') [lineno=11, column=0, prefix='']
#       simple_stmt [2 children]
#         power [3 children]
#           NAME('as_subcommand') [lineno=11, column=4, prefix='']
#           trailer [2 children]
#             DOT('.') [lineno=11, column=17, prefix='']
#             NAME('run') [lineno=11, column=18, prefix='']
#           trailer [3 children]
#             LPAR('(') [lineno=11, column=21, prefix='']
#             argument [3 children]
#               NAME('config') [lineno=11, column=22, prefix='']
#               EQUAL('=') [lineno=11, column=28, prefix='']
#               NAME('cfg') [lineno=11, column=29, prefix='']
#             RPAR(')') [lineno=11, column=32, prefix='']
#         NEWLINE('\n') [lineno=11, column=33, prefix='']
#       DEDENT('') [lineno=12, column=0, prefix='']
#   ENDMARKER('') [lineno=12, column=0, prefix='']

