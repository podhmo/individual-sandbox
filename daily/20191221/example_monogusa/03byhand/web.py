# this module is generated by monogusa.web.codegen
import typing as t
from pydantic import BaseModel
from fastapi import (
    APIRouter,
    Depends,
    FastAPI
)
from monogusa.web import (
    runtime
)
import commands


router = APIRouter()


class HelloInput(BaseModel):
    name: str  = 'world'


@router.post("/hello", response_model=runtime.CommandOutput)
def hello(input: HelloInput) -> t.Dict[str, t.Any]:
    with runtime.handle() as s:
        # TODO: support positional arguments? (DI)
        commands.hello(**input.dict())
        return s.dict()


class ByebyeInput(BaseModel):
    name: str


@router.post("/byebye", response_model=runtime.CommandOutput)
def byebye(input: ByebyeInput) -> t.Dict[str, t.Any]:
    with runtime.handle() as s:
        # TODO: support positional arguments? (DI)
        commands.byebye(**input.dict())
        return s.dict()


def main(app: FastAPI):
    from monogusa.web import cli
    cli.run(app)


app = FastAPI()
app.include_router(router)
if __name__ == '__main__':
    main(app=app)