types.TypeAndValue{
  mode: 0x07,
  Type: &types.Named{
    obj: &types.TypeName{
      object: types.object{
        parent: &types.Scope{
          parent: &types.Scope{
            parent:   (*types.Scope)(nil),
            children: []*types.Scope{},
            elems:    {
              "int64": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "int64",
                  typ:    &types.Basic{
                    kind: 6,
                    info: 2,
                    name: "int64",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "uint8": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "uint8",
                  typ:    &types.Basic{
                    kind: 8,
                    info: 6,
                    name: "uint8",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "uint16": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "uint16",
                  typ:    &types.Basic{
                    kind: 9,
                    info: 6,
                    name: "uint16",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "float64": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "float64",
                  typ:    &types.Basic{
                    kind: 14,
                    info: 8,
                    name: "float64",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "close": &types.Builtin{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "close",
                  typ:    &types.Basic{
                    kind: 0,
                    info: 0,
                    name: "invalid type",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 2,
              },
              "complex": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "complex",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 3,
              },
              "new": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "new",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 9,
              },
              "int16": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "int16",
                  typ:    &types.Basic{
                    kind: 4,
                    info: 2,
                    name: "int16",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "uint64": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "uint64",
                  typ:    &types.Basic{
                    kind: 11,
                    info: 6,
                    name: "uint64",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "uintptr": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "uintptr",
                  typ:    &types.Basic{
                    kind: 12,
                    info: 6,
                    name: "uintptr",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "complex128": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "complex128",
                  typ:    &types.Basic{
                    kind: 16,
                    info: 16,
                    name: "complex128",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "iota": &types.Const{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "iota",
                  typ:    &types.Basic{
                    kind: 20,
                    info: 66,
                    name: "untyped int",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                val:     0,
                visited: false,
              },
              "cap": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "cap",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 1,
              },
              "string": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "string",
                  typ:    &types.Basic{
                    kind: 17,
                    info: 32,
                    name: "string",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "true": &types.Const{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "true",
                  typ:    &types.Basic{
                    kind: 19,
                    info: 65,
                    name: "untyped bool",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                val:     true,
                visited: false,
              },
              "nil": &types.Nil{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "nil",
                  typ:    &types.Basic{
                    kind: 25,
                    info: 64,
                    name: "untyped nil",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "imag": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "imag",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 6,
              },
              "real": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "real",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 13,
              },
              "bool": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "bool",
                  typ:    &types.Basic{
                    kind: 1,
                    info: 1,
                    name: "bool",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "complex64": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "complex64",
                  typ:    &types.Basic{
                    kind: 15,
                    info: 16,
                    name: "complex64",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "delete": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "delete",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 5,
              },
              "println": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "println",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 12,
              },
              "int32": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "int32",
                  typ:    &types.Basic{
                    kind: 5,
                    info: 2,
                    name: "int32",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "rune": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "rune",
                  typ:    &types.Basic{
                    kind: 5,
                    info: 2,
                    name: "rune",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "error": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "error",
                  typ:    &types.Named{
                    obj:        &types.TypeName{...},
                    underlying: &types.Interface{
                      methods: []*types.Func{
                        &types.Func{
                          object: types.object{
                            parent: (*types.Scope)(nil),
                            pos:    0,
                            pkg:    (*types.Package)(nil),
                            name:   "Error",
                            typ:    &types.Signature{
                              scope: (*types.Scope)(nil),
                              recv:  &types.Var{
                                object: types.object{
                                  parent:    (*types.Scope)(nil),
                                  pos:       0,
                                  pkg:       (*types.Package)(nil),
                                  name:      "",
                                  typ:       &types.Named{...},
                                  order_:    0x00000000,
                                  scopePos_: 0,
                                },
                                anonymous: false,
                                visited:   false,
                                isField:   false,
                                used:      false,
                              },
                              params:  (*types.Tuple)(nil),
                              results: &types.Tuple{
                                vars: []*types.Var{
                                  &types.Var{
                                    object: types.object{
                                      parent:    (*types.Scope)(nil),
                                      pos:       0,
                                      pkg:       (*types.Package)(nil),
                                      name:      "",
                                      typ:       &types.Basic{...},
                                      order_:    0x00000000,
                                      scopePos_: 0,
                                    },
                                    anonymous: false,
                                    visited:   false,
                                    isField:   false,
                                    used:      false,
                                  },
                                },
                              },
                              variadic: false,
                            },
                            order_:    0x00000000,
                            scopePos_: 0,
                          },
                        },
                      },
                      embeddeds:  []*types.Named{},
                      allMethods: []*types.Func{...},
                    },
                    methods: []*types.Func{},
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "false": &types.Const{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "false",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                val:     false,
                visited: false,
              },
              "append": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "append",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 0,
              },
              "copy": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "copy",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 4,
              },
              "len": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "len",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 7,
              },
              "recover": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "recover",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 14,
              },
              "int": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "int",
                  typ:    &types.Basic{
                    kind: 2,
                    info: 2,
                    name: "int",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "int8": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "int8",
                  typ:    &types.Basic{
                    kind: 3,
                    info: 2,
                    name: "int8",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "uint": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "uint",
                  typ:    &types.Basic{
                    kind: 7,
                    info: 6,
                    name: "uint",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "panic": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "panic",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 10,
              },
              "uint32": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "uint32",
                  typ:    &types.Basic{
                    kind: 10,
                    info: 6,
                    name: "uint32",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "float32": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "float32",
                  typ:    &types.Basic{
                    kind: 13,
                    info: 8,
                    name: "float32",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "byte": &types.TypeName{
                object: types.object{
                  parent: &types.Scope{...},
                  pos:    0,
                  pkg:    (*types.Package)(nil),
                  name:   "byte",
                  typ:    &types.Basic{
                    kind: 8,
                    info: 6,
                    name: "byte",
                  },
                  order_:    0x00000000,
                  scopePos_: 0,
                },
              },
              "make": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "make",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 8,
              },
              "print": &types.Builtin{
                object: types.object{
                  parent:    &types.Scope{...},
                  pos:       0,
                  pkg:       (*types.Package)(nil),
                  name:      "print",
                  typ:       &types.Basic{...},
                  order_:    0x00000000,
                  scopePos_: 0,
                },
                id: 11,
              },
            },
            pos:     0,
            end:     0,
            comment: "universe",
          },
          children: []*types.Scope{
            &types.Scope{
              parent:   &types.Scope{...},
              children: []*types.Scope{},
              elems:    map[string]types.Object{},
              pos:      1,
              end:      74,
              comment:  "../model/pereson.go",
            },
          },
          elems: {
            "Person": &types.TypeName{...},
          },
          pos:     0,
          end:     0,
          comment: "package \".\"",
        },
        pos: 33,
        pkg: &types.Package{
          path:     ".",
          name:     "model",
          scope:    &types.Scope{...},
          complete: true,
          imports:  []*types.Package{},
          fake:     false,
        },
        name:      "Person",
        typ:       &types.Named{...},
        order_:    0x00000001,
        scopePos_: 0,
      },
    },
    underlying: &types.Struct{
      fields: []*types.Var{
        &types.Var{
          object: types.object{
            parent:    (*types.Scope)(nil),
            pos:       50,
            pkg:       &types.Package{...},
            name:      "Name",
            typ:       &types.Basic{...},
            order_:    0x00000000,
            scopePos_: 0,
          },
          anonymous: false,
          visited:   false,
          isField:   true,
          used:      false,
        },
        &types.Var{
          object: types.object{
            parent:    (*types.Scope)(nil),
            pos:       63,
            pkg:       &types.Package{...},
            name:      "Age",
            typ:       &types.Basic{...},
            order_:    0x00000000,
            scopePos_: 0,
          },
          anonymous: false,
          visited:   false,
          isField:   true,
          used:      false,
        },
      },
      tags: []string{},
    },
    methods: []*types.Func{},
  },
  Value: 20,
}
